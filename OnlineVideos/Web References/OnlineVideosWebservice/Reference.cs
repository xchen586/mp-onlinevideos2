//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.296
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.296.
// 
#pragma warning disable 1591

namespace OnlineVideos.OnlineVideosWebservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OnlineVideosServiceSoap", Namespace="http://tempuri.org/")]
    public partial class OnlineVideosService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitDllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSitesOverviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDllsOverviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDllOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteIconOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteIconIfChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteBannerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteBannerIfChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDllOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OnlineVideosService() {
            this.Url = "http://onlinevideos.nocrosshair.de/OnlineVideos.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterEmailCompletedEventHandler RegisterEmailCompleted;
        
        /// <remarks/>
        public event SubmitSiteCompletedEventHandler SubmitSiteCompleted;
        
        /// <remarks/>
        public event SubmitDllCompletedEventHandler SubmitDllCompleted;
        
        /// <remarks/>
        public event SubmitReportCompletedEventHandler SubmitReportCompleted;
        
        /// <remarks/>
        public event GetReportsCompletedEventHandler GetReportsCompleted;
        
        /// <remarks/>
        public event GetSitesOverviewCompletedEventHandler GetSitesOverviewCompleted;
        
        /// <remarks/>
        public event GetDllsOverviewCompletedEventHandler GetDllsOverviewCompleted;
        
        /// <remarks/>
        public event GetDllOwnerCompletedEventHandler GetDllOwnerCompleted;
        
        /// <remarks/>
        public event GetSiteXmlCompletedEventHandler GetSiteXmlCompleted;
        
        /// <remarks/>
        public event GetSiteIconCompletedEventHandler GetSiteIconCompleted;
        
        /// <remarks/>
        public event GetSiteIconIfChangedCompletedEventHandler GetSiteIconIfChangedCompleted;
        
        /// <remarks/>
        public event GetSiteBannerCompletedEventHandler GetSiteBannerCompleted;
        
        /// <remarks/>
        public event GetSiteBannerIfChangedCompletedEventHandler GetSiteBannerIfChangedCompleted;
        
        /// <remarks/>
        public event GetDllCompletedEventHandler GetDllCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterEmail(string email, out string infoMessage) {
            object[] results = this.Invoke("RegisterEmail", new object[] {
                        email});
            infoMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterEmailAsync(string email) {
            this.RegisterEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void RegisterEmailAsync(string email, object userState) {
            if ((this.RegisterEmailOperationCompleted == null)) {
                this.RegisterEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterEmailOperationCompleted);
            }
            this.InvokeAsync("RegisterEmail", new object[] {
                        email}, this.RegisterEmailOperationCompleted, userState);
        }
        
        private void OnRegisterEmailOperationCompleted(object arg) {
            if ((this.RegisterEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterEmailCompleted(this, new RegisterEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitSite(string email, string password, string siteXml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] icon, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] banner, string requiredDll, out string infoMessage) {
            object[] results = this.Invoke("SubmitSite", new object[] {
                        email,
                        password,
                        siteXml,
                        icon,
                        banner,
                        requiredDll});
            infoMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitSiteAsync(string email, string password, string siteXml, byte[] icon, byte[] banner, string requiredDll) {
            this.SubmitSiteAsync(email, password, siteXml, icon, banner, requiredDll, null);
        }
        
        /// <remarks/>
        public void SubmitSiteAsync(string email, string password, string siteXml, byte[] icon, byte[] banner, string requiredDll, object userState) {
            if ((this.SubmitSiteOperationCompleted == null)) {
                this.SubmitSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitSiteOperationCompleted);
            }
            this.InvokeAsync("SubmitSite", new object[] {
                        email,
                        password,
                        siteXml,
                        icon,
                        banner,
                        requiredDll}, this.SubmitSiteOperationCompleted, userState);
        }
        
        private void OnSubmitSiteOperationCompleted(object arg) {
            if ((this.SubmitSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitSiteCompleted(this, new SubmitSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitDll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitDll(string email, string password, string name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, out string infoMessage) {
            object[] results = this.Invoke("SubmitDll", new object[] {
                        email,
                        password,
                        name,
                        data});
            infoMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitDllAsync(string email, string password, string name, byte[] data) {
            this.SubmitDllAsync(email, password, name, data, null);
        }
        
        /// <remarks/>
        public void SubmitDllAsync(string email, string password, string name, byte[] data, object userState) {
            if ((this.SubmitDllOperationCompleted == null)) {
                this.SubmitDllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitDllOperationCompleted);
            }
            this.InvokeAsync("SubmitDll", new object[] {
                        email,
                        password,
                        name,
                        data}, this.SubmitDllOperationCompleted, userState);
        }
        
        private void OnSubmitDllOperationCompleted(object arg) {
            if ((this.SubmitDllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitDllCompleted(this, new SubmitDllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitReport(string siteName, string message, ReportType type, out string infoMessage) {
            object[] results = this.Invoke("SubmitReport", new object[] {
                        siteName,
                        message,
                        type});
            infoMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitReportAsync(string siteName, string message, ReportType type) {
            this.SubmitReportAsync(siteName, message, type, null);
        }
        
        /// <remarks/>
        public void SubmitReportAsync(string siteName, string message, ReportType type, object userState) {
            if ((this.SubmitReportOperationCompleted == null)) {
                this.SubmitReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitReportOperationCompleted);
            }
            this.InvokeAsync("SubmitReport", new object[] {
                        siteName,
                        message,
                        type}, this.SubmitReportOperationCompleted, userState);
        }
        
        private void OnSubmitReportOperationCompleted(object arg) {
            if ((this.SubmitReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitReportCompleted(this, new SubmitReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReports", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Report[] GetReports(string siteName) {
            object[] results = this.Invoke("GetReports", new object[] {
                        siteName});
            return ((Report[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportsAsync(string siteName) {
            this.GetReportsAsync(siteName, null);
        }
        
        /// <remarks/>
        public void GetReportsAsync(string siteName, object userState) {
            if ((this.GetReportsOperationCompleted == null)) {
                this.GetReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportsOperationCompleted);
            }
            this.InvokeAsync("GetReports", new object[] {
                        siteName}, this.GetReportsOperationCompleted, userState);
        }
        
        private void OnGetReportsOperationCompleted(object arg) {
            if ((this.GetReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportsCompleted(this, new GetReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSitesOverview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Site[] GetSitesOverview() {
            object[] results = this.Invoke("GetSitesOverview", new object[0]);
            return ((Site[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSitesOverviewAsync() {
            this.GetSitesOverviewAsync(null);
        }
        
        /// <remarks/>
        public void GetSitesOverviewAsync(object userState) {
            if ((this.GetSitesOverviewOperationCompleted == null)) {
                this.GetSitesOverviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSitesOverviewOperationCompleted);
            }
            this.InvokeAsync("GetSitesOverview", new object[0], this.GetSitesOverviewOperationCompleted, userState);
        }
        
        private void OnGetSitesOverviewOperationCompleted(object arg) {
            if ((this.GetSitesOverviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSitesOverviewCompleted(this, new GetSitesOverviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDllsOverview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Dll[] GetDllsOverview() {
            object[] results = this.Invoke("GetDllsOverview", new object[0]);
            return ((Dll[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDllsOverviewAsync() {
            this.GetDllsOverviewAsync(null);
        }
        
        /// <remarks/>
        public void GetDllsOverviewAsync(object userState) {
            if ((this.GetDllsOverviewOperationCompleted == null)) {
                this.GetDllsOverviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDllsOverviewOperationCompleted);
            }
            this.InvokeAsync("GetDllsOverview", new object[0], this.GetDllsOverviewOperationCompleted, userState);
        }
        
        private void OnGetDllsOverviewOperationCompleted(object arg) {
            if ((this.GetDllsOverviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDllsOverviewCompleted(this, new GetDllsOverviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDllOwner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDllOwner(string dllName, out string MD5) {
            object[] results = this.Invoke("GetDllOwner", new object[] {
                        dllName});
            MD5 = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDllOwnerAsync(string dllName) {
            this.GetDllOwnerAsync(dllName, null);
        }
        
        /// <remarks/>
        public void GetDllOwnerAsync(string dllName, object userState) {
            if ((this.GetDllOwnerOperationCompleted == null)) {
                this.GetDllOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDllOwnerOperationCompleted);
            }
            this.InvokeAsync("GetDllOwner", new object[] {
                        dllName}, this.GetDllOwnerOperationCompleted, userState);
        }
        
        private void OnGetDllOwnerOperationCompleted(object arg) {
            if ((this.GetDllOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDllOwnerCompleted(this, new GetDllOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSiteXml(string siteName) {
            object[] results = this.Invoke("GetSiteXml", new object[] {
                        siteName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteXmlAsync(string siteName) {
            this.GetSiteXmlAsync(siteName, null);
        }
        
        /// <remarks/>
        public void GetSiteXmlAsync(string siteName, object userState) {
            if ((this.GetSiteXmlOperationCompleted == null)) {
                this.GetSiteXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteXmlOperationCompleted);
            }
            this.InvokeAsync("GetSiteXml", new object[] {
                        siteName}, this.GetSiteXmlOperationCompleted, userState);
        }
        
        private void OnGetSiteXmlOperationCompleted(object arg) {
            if ((this.GetSiteXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteXmlCompleted(this, new GetSiteXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteIcon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSiteIcon(string siteName) {
            object[] results = this.Invoke("GetSiteIcon", new object[] {
                        siteName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteIconAsync(string siteName) {
            this.GetSiteIconAsync(siteName, null);
        }
        
        /// <remarks/>
        public void GetSiteIconAsync(string siteName, object userState) {
            if ((this.GetSiteIconOperationCompleted == null)) {
                this.GetSiteIconOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteIconOperationCompleted);
            }
            this.InvokeAsync("GetSiteIcon", new object[] {
                        siteName}, this.GetSiteIconOperationCompleted, userState);
        }
        
        private void OnGetSiteIconOperationCompleted(object arg) {
            if ((this.GetSiteIconCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteIconCompleted(this, new GetSiteIconCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteIconIfChanged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSiteIconIfChanged(string siteName, string md5) {
            object[] results = this.Invoke("GetSiteIconIfChanged", new object[] {
                        siteName,
                        md5});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteIconIfChangedAsync(string siteName, string md5) {
            this.GetSiteIconIfChangedAsync(siteName, md5, null);
        }
        
        /// <remarks/>
        public void GetSiteIconIfChangedAsync(string siteName, string md5, object userState) {
            if ((this.GetSiteIconIfChangedOperationCompleted == null)) {
                this.GetSiteIconIfChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteIconIfChangedOperationCompleted);
            }
            this.InvokeAsync("GetSiteIconIfChanged", new object[] {
                        siteName,
                        md5}, this.GetSiteIconIfChangedOperationCompleted, userState);
        }
        
        private void OnGetSiteIconIfChangedOperationCompleted(object arg) {
            if ((this.GetSiteIconIfChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteIconIfChangedCompleted(this, new GetSiteIconIfChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteBanner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSiteBanner(string siteName) {
            object[] results = this.Invoke("GetSiteBanner", new object[] {
                        siteName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteBannerAsync(string siteName) {
            this.GetSiteBannerAsync(siteName, null);
        }
        
        /// <remarks/>
        public void GetSiteBannerAsync(string siteName, object userState) {
            if ((this.GetSiteBannerOperationCompleted == null)) {
                this.GetSiteBannerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteBannerOperationCompleted);
            }
            this.InvokeAsync("GetSiteBanner", new object[] {
                        siteName}, this.GetSiteBannerOperationCompleted, userState);
        }
        
        private void OnGetSiteBannerOperationCompleted(object arg) {
            if ((this.GetSiteBannerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteBannerCompleted(this, new GetSiteBannerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSiteBannerIfChanged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSiteBannerIfChanged(string siteName, string md5) {
            object[] results = this.Invoke("GetSiteBannerIfChanged", new object[] {
                        siteName,
                        md5});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteBannerIfChangedAsync(string siteName, string md5) {
            this.GetSiteBannerIfChangedAsync(siteName, md5, null);
        }
        
        /// <remarks/>
        public void GetSiteBannerIfChangedAsync(string siteName, string md5, object userState) {
            if ((this.GetSiteBannerIfChangedOperationCompleted == null)) {
                this.GetSiteBannerIfChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteBannerIfChangedOperationCompleted);
            }
            this.InvokeAsync("GetSiteBannerIfChanged", new object[] {
                        siteName,
                        md5}, this.GetSiteBannerIfChangedOperationCompleted, userState);
        }
        
        private void OnGetSiteBannerIfChangedOperationCompleted(object arg) {
            if ((this.GetSiteBannerIfChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteBannerIfChangedCompleted(this, new GetSiteBannerIfChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDll(string name) {
            object[] results = this.Invoke("GetDll", new object[] {
                        name});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDllAsync(string name) {
            this.GetDllAsync(name, null);
        }
        
        /// <remarks/>
        public void GetDllAsync(string name, object userState) {
            if ((this.GetDllOperationCompleted == null)) {
                this.GetDllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDllOperationCompleted);
            }
            this.InvokeAsync("GetDll", new object[] {
                        name}, this.GetDllOperationCompleted, userState);
        }
        
        private void OnGetDllOperationCompleted(object arg) {
            if ((this.GetDllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDllCompleted(this, new GetDllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ReportType {
        
        /// <remarks/>
        Suggestion,
        
        /// <remarks/>
        Broken,
        
        /// <remarks/>
        ConfirmedBroken,
        
        /// <remarks/>
        RejectedBroken,
        
        /// <remarks/>
        Fixed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Report {
        
        private string site_FKField;
        
        private System.DateTime dateField;
        
        private string messageField;
        
        private ReportType typeField;
        
        private Site siteField;
        
        /// <remarks/>
        public string Site_FK {
            get {
                return this.site_FKField;
            }
            set {
                this.site_FKField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public ReportType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public Site Site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Site {
        
        private uint reportCountField;
        
        private string xMLField;
        
        private SiteState stateField;
        
        private string nameField;
        
        private string owner_FKField;
        
        private System.DateTime lastUpdatedField;
        
        private string languageField;
        
        private string descriptionField;
        
        private bool isAdultField;
        
        private string requiredDllField;
        
        private User ownerField;
        
        private Dll dllField;
        
        /// <remarks/>
        public uint ReportCount {
            get {
                return this.reportCountField;
            }
            set {
                this.reportCountField = value;
            }
        }
        
        /// <remarks/>
        public string XML {
            get {
                return this.xMLField;
            }
            set {
                this.xMLField = value;
            }
        }
        
        /// <remarks/>
        public SiteState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Owner_FK {
            get {
                return this.owner_FKField;
            }
            set {
                this.owner_FKField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdult {
            get {
                return this.isAdultField;
            }
            set {
                this.isAdultField = value;
            }
        }
        
        /// <remarks/>
        public string RequiredDll {
            get {
                return this.requiredDllField;
            }
            set {
                this.requiredDllField = value;
            }
        }
        
        /// <remarks/>
        public User Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public Dll Dll {
            get {
                return this.dllField;
            }
            set {
                this.dllField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SiteState {
        
        /// <remarks/>
        Working,
        
        /// <remarks/>
        Reported,
        
        /// <remarks/>
        Broken,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private string emailField;
        
        private string passwordField;
        
        private bool isAdminField;
        
        private Site[] sitesField;
        
        private Dll[] dllsField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
        
        /// <remarks/>
        public Site[] Sites {
            get {
                return this.sitesField;
            }
            set {
                this.sitesField = value;
            }
        }
        
        /// <remarks/>
        public Dll[] Dlls {
            get {
                return this.dllsField;
            }
            set {
                this.dllsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Dll {
        
        private string nameField;
        
        private System.DateTime lastUpdatedField;
        
        private string owner_FKField;
        
        private string mD5Field;
        
        private Site[] sitesField;
        
        private User ownerField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string Owner_FK {
            get {
                return this.owner_FKField;
            }
            set {
                this.owner_FKField = value;
            }
        }
        
        /// <remarks/>
        public string MD5 {
            get {
                return this.mD5Field;
            }
            set {
                this.mD5Field = value;
            }
        }
        
        /// <remarks/>
        public Site[] Sites {
            get {
                return this.sitesField;
            }
            set {
                this.sitesField = value;
            }
        }
        
        /// <remarks/>
        public User Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RegisterEmailCompletedEventHandler(object sender, RegisterEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string infoMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubmitSiteCompletedEventHandler(object sender, SubmitSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string infoMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubmitDllCompletedEventHandler(object sender, SubmitDllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitDllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitDllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string infoMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubmitReportCompletedEventHandler(object sender, SubmitReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string infoMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReportsCompletedEventHandler(object sender, GetReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Report[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Report[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSitesOverviewCompletedEventHandler(object sender, GetSitesOverviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSitesOverviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSitesOverviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Site[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Site[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDllsOverviewCompletedEventHandler(object sender, GetDllsOverviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDllsOverviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDllsOverviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Dll[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Dll[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDllOwnerCompletedEventHandler(object sender, GetDllOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDllOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDllOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MD5 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteXmlCompletedEventHandler(object sender, GetSiteXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteIconCompletedEventHandler(object sender, GetSiteIconCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteIconCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteIconCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteIconIfChangedCompletedEventHandler(object sender, GetSiteIconIfChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteIconIfChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteIconIfChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteBannerCompletedEventHandler(object sender, GetSiteBannerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteBannerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteBannerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteBannerIfChangedCompletedEventHandler(object sender, GetSiteBannerIfChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteBannerIfChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteBannerIfChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDllCompletedEventHandler(object sender, GetDllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591