//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1008
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace OnlineVideos.Sites.MpExtendedStreamingService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    // CODEGEN: Das optionale WSDL-Erweiterungselement 'PolicyReference' von Namespace 'http://www.w3.org/ns/ws-policy' wurde nicht behandelt.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapEndpoint", Namespace="http://tempuri.org/")]
    public partial class SoapEndpoint : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServiceDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTranscoderProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTranscoderProfilesForTargetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTranscoderProfileByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTranscodingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartStreamWithStreamSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStreamingSessionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStreamSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizeStreamingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizeRemoteHostForStreamingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemSupportStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SoapEndpoint() {
            this.Url = "http://192.168.5.18:4322/MPExtended/StreamingService/soap";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServiceDescriptionCompletedEventHandler GetServiceDescriptionCompleted;
        
        /// <remarks/>
        public event GetTranscoderProfilesCompletedEventHandler GetTranscoderProfilesCompleted;
        
        /// <remarks/>
        public event GetTranscoderProfilesForTargetCompletedEventHandler GetTranscoderProfilesForTargetCompleted;
        
        /// <remarks/>
        public event GetTranscoderProfileByNameCompletedEventHandler GetTranscoderProfileByNameCompleted;
        
        /// <remarks/>
        public event GetMediaInfoCompletedEventHandler GetMediaInfoCompleted;
        
        /// <remarks/>
        public event GetTranscodingInfoCompletedEventHandler GetTranscodingInfoCompleted;
        
        /// <remarks/>
        public event InitStreamCompletedEventHandler InitStreamCompleted;
        
        /// <remarks/>
        public event StartStreamCompletedEventHandler StartStreamCompleted;
        
        /// <remarks/>
        public event StartStreamWithStreamSelectionCompletedEventHandler StartStreamWithStreamSelectionCompleted;
        
        /// <remarks/>
        public event StopStreamCompletedEventHandler StopStreamCompleted;
        
        /// <remarks/>
        public event FinishStreamCompletedEventHandler FinishStreamCompleted;
        
        /// <remarks/>
        public event GetStreamingSessionsCompletedEventHandler GetStreamingSessionsCompleted;
        
        /// <remarks/>
        public event GetStreamSizeCompletedEventHandler GetStreamSizeCompleted;
        
        /// <remarks/>
        public event AuthorizeStreamingCompletedEventHandler AuthorizeStreamingCompleted;
        
        /// <remarks/>
        public event AuthorizeRemoteHostForStreamingCompletedEventHandler AuthorizeRemoteHostForStreamingCompleted;
        
        /// <remarks/>
        public event GetItemSupportStatusCompletedEventHandler GetItemSupportStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetServiceDescription", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebStreamServiceDescription GetServiceDescription() {
            object[] results = this.Invoke("GetServiceDescription", new object[0]);
            return ((WebStreamServiceDescription)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceDescriptionAsync() {
            this.GetServiceDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceDescriptionAsync(object userState) {
            if ((this.GetServiceDescriptionOperationCompleted == null)) {
                this.GetServiceDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetServiceDescription", new object[0], this.GetServiceDescriptionOperationCompleted, userState);
        }
        
        private void OnGetServiceDescriptionOperationCompleted(object arg) {
            if ((this.GetServiceDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceDescriptionCompleted(this, new GetServiceDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetTranscoderProfiles", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
            "rfaces")]
        public WebTranscoderProfile[] GetTranscoderProfiles() {
            object[] results = this.Invoke("GetTranscoderProfiles", new object[0]);
            return ((WebTranscoderProfile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTranscoderProfilesAsync() {
            this.GetTranscoderProfilesAsync(null);
        }
        
        /// <remarks/>
        public void GetTranscoderProfilesAsync(object userState) {
            if ((this.GetTranscoderProfilesOperationCompleted == null)) {
                this.GetTranscoderProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranscoderProfilesOperationCompleted);
            }
            this.InvokeAsync("GetTranscoderProfiles", new object[0], this.GetTranscoderProfilesOperationCompleted, userState);
        }
        
        private void OnGetTranscoderProfilesOperationCompleted(object arg) {
            if ((this.GetTranscoderProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranscoderProfilesCompleted(this, new GetTranscoderProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetTranscoderProfilesForTarget", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
            "rfaces")]
        public WebTranscoderProfile[] GetTranscoderProfilesForTarget([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string target) {
            object[] results = this.Invoke("GetTranscoderProfilesForTarget", new object[] {
                        target});
            return ((WebTranscoderProfile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTranscoderProfilesForTargetAsync(string target) {
            this.GetTranscoderProfilesForTargetAsync(target, null);
        }
        
        /// <remarks/>
        public void GetTranscoderProfilesForTargetAsync(string target, object userState) {
            if ((this.GetTranscoderProfilesForTargetOperationCompleted == null)) {
                this.GetTranscoderProfilesForTargetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranscoderProfilesForTargetOperationCompleted);
            }
            this.InvokeAsync("GetTranscoderProfilesForTarget", new object[] {
                        target}, this.GetTranscoderProfilesForTargetOperationCompleted, userState);
        }
        
        private void OnGetTranscoderProfilesForTargetOperationCompleted(object arg) {
            if ((this.GetTranscoderProfilesForTargetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranscoderProfilesForTargetCompleted(this, new GetTranscoderProfilesForTargetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetTranscoderProfileByName", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTranscoderProfile GetTranscoderProfileByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("GetTranscoderProfileByName", new object[] {
                        name});
            return ((WebTranscoderProfile)(results[0]));
        }
        
        /// <remarks/>
        public void GetTranscoderProfileByNameAsync(string name) {
            this.GetTranscoderProfileByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetTranscoderProfileByNameAsync(string name, object userState) {
            if ((this.GetTranscoderProfileByNameOperationCompleted == null)) {
                this.GetTranscoderProfileByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranscoderProfileByNameOperationCompleted);
            }
            this.InvokeAsync("GetTranscoderProfileByName", new object[] {
                        name}, this.GetTranscoderProfileByNameOperationCompleted, userState);
        }
        
        private void OnGetTranscoderProfileByNameOperationCompleted(object arg) {
            if ((this.GetTranscoderProfileByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranscoderProfileByNameCompleted(this, new GetTranscoderProfileByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetMediaInfo", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMediaInfo GetMediaInfo(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> offset, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified) {
            object[] results = this.Invoke("GetMediaInfo", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified});
            return ((WebMediaInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaInfoAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified) {
            this.GetMediaInfoAsync(type, typeSpecified, provider, providerSpecified, itemId, offset, offsetSpecified, null);
        }
        
        /// <remarks/>
        public void GetMediaInfoAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified, object userState) {
            if ((this.GetMediaInfoOperationCompleted == null)) {
                this.GetMediaInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaInfoOperationCompleted);
            }
            this.InvokeAsync("GetMediaInfo", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified}, this.GetMediaInfoOperationCompleted, userState);
        }
        
        private void OnGetMediaInfoOperationCompleted(object arg) {
            if ((this.GetMediaInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaInfoCompleted(this, new GetMediaInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetTranscodingInfo", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTranscodingInfo GetTranscodingInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> playerPosition, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerPositionSpecified) {
            object[] results = this.Invoke("GetTranscodingInfo", new object[] {
                        identifier,
                        playerPosition,
                        playerPositionSpecified});
            return ((WebTranscodingInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTranscodingInfoAsync(string identifier, System.Nullable<long> playerPosition, bool playerPositionSpecified) {
            this.GetTranscodingInfoAsync(identifier, playerPosition, playerPositionSpecified, null);
        }
        
        /// <remarks/>
        public void GetTranscodingInfoAsync(string identifier, System.Nullable<long> playerPosition, bool playerPositionSpecified, object userState) {
            if ((this.GetTranscodingInfoOperationCompleted == null)) {
                this.GetTranscodingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranscodingInfoOperationCompleted);
            }
            this.InvokeAsync("GetTranscodingInfo", new object[] {
                        identifier,
                        playerPosition,
                        playerPositionSpecified}, this.GetTranscodingInfoOperationCompleted, userState);
        }
        
        private void OnGetTranscodingInfoOperationCompleted(object arg) {
            if ((this.GetTranscodingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranscodingInfoCompleted(this, new GetTranscodingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/InitStream", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult InitStream(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> offset, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientDescription, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> idleTimeout, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool idleTimeoutSpecified) {
            object[] results = this.Invoke("InitStream", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified,
                        clientDescription,
                        identifier,
                        idleTimeout,
                        idleTimeoutSpecified});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void InitStreamAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified, string clientDescription, string identifier, System.Nullable<int> idleTimeout, bool idleTimeoutSpecified) {
            this.InitStreamAsync(type, typeSpecified, provider, providerSpecified, itemId, offset, offsetSpecified, clientDescription, identifier, idleTimeout, idleTimeoutSpecified, null);
        }
        
        /// <remarks/>
        public void InitStreamAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified, string clientDescription, string identifier, System.Nullable<int> idleTimeout, bool idleTimeoutSpecified, object userState) {
            if ((this.InitStreamOperationCompleted == null)) {
                this.InitStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitStreamOperationCompleted);
            }
            this.InvokeAsync("InitStream", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified,
                        clientDescription,
                        identifier,
                        idleTimeout,
                        idleTimeoutSpecified}, this.InitStreamOperationCompleted, userState);
        }
        
        private void OnInitStreamOperationCompleted(object arg) {
            if ((this.InitStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitStreamCompleted(this, new InitStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/StartStream", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebStringResult StartStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string profileName, long startPosition, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startPositionSpecified) {
            object[] results = this.Invoke("StartStream", new object[] {
                        identifier,
                        profileName,
                        startPosition,
                        startPositionSpecified});
            return ((WebStringResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartStreamAsync(string identifier, string profileName, long startPosition, bool startPositionSpecified) {
            this.StartStreamAsync(identifier, profileName, startPosition, startPositionSpecified, null);
        }
        
        /// <remarks/>
        public void StartStreamAsync(string identifier, string profileName, long startPosition, bool startPositionSpecified, object userState) {
            if ((this.StartStreamOperationCompleted == null)) {
                this.StartStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartStreamOperationCompleted);
            }
            this.InvokeAsync("StartStream", new object[] {
                        identifier,
                        profileName,
                        startPosition,
                        startPositionSpecified}, this.StartStreamOperationCompleted, userState);
        }
        
        private void OnStartStreamOperationCompleted(object arg) {
            if ((this.StartStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartStreamCompleted(this, new StartStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/StartStreamWithStreamSelection", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebStringResult StartStreamWithStreamSelection([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string profileName, long startPosition, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startPositionSpecified, int audioId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool audioIdSpecified, int subtitleId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool subtitleIdSpecified) {
            object[] results = this.Invoke("StartStreamWithStreamSelection", new object[] {
                        identifier,
                        profileName,
                        startPosition,
                        startPositionSpecified,
                        audioId,
                        audioIdSpecified,
                        subtitleId,
                        subtitleIdSpecified});
            return ((WebStringResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartStreamWithStreamSelectionAsync(string identifier, string profileName, long startPosition, bool startPositionSpecified, int audioId, bool audioIdSpecified, int subtitleId, bool subtitleIdSpecified) {
            this.StartStreamWithStreamSelectionAsync(identifier, profileName, startPosition, startPositionSpecified, audioId, audioIdSpecified, subtitleId, subtitleIdSpecified, null);
        }
        
        /// <remarks/>
        public void StartStreamWithStreamSelectionAsync(string identifier, string profileName, long startPosition, bool startPositionSpecified, int audioId, bool audioIdSpecified, int subtitleId, bool subtitleIdSpecified, object userState) {
            if ((this.StartStreamWithStreamSelectionOperationCompleted == null)) {
                this.StartStreamWithStreamSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartStreamWithStreamSelectionOperationCompleted);
            }
            this.InvokeAsync("StartStreamWithStreamSelection", new object[] {
                        identifier,
                        profileName,
                        startPosition,
                        startPositionSpecified,
                        audioId,
                        audioIdSpecified,
                        subtitleId,
                        subtitleIdSpecified}, this.StartStreamWithStreamSelectionOperationCompleted, userState);
        }
        
        private void OnStartStreamWithStreamSelectionOperationCompleted(object arg) {
            if ((this.StartStreamWithStreamSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartStreamWithStreamSelectionCompleted(this, new StartStreamWithStreamSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/StopStream", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult StopStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier) {
            object[] results = this.Invoke("StopStream", new object[] {
                        identifier});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void StopStreamAsync(string identifier) {
            this.StopStreamAsync(identifier, null);
        }
        
        /// <remarks/>
        public void StopStreamAsync(string identifier, object userState) {
            if ((this.StopStreamOperationCompleted == null)) {
                this.StopStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopStreamOperationCompleted);
            }
            this.InvokeAsync("StopStream", new object[] {
                        identifier}, this.StopStreamOperationCompleted, userState);
        }
        
        private void OnStopStreamOperationCompleted(object arg) {
            if ((this.StopStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopStreamCompleted(this, new StopStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/FinishStream", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult FinishStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier) {
            object[] results = this.Invoke("FinishStream", new object[] {
                        identifier});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void FinishStreamAsync(string identifier) {
            this.FinishStreamAsync(identifier, null);
        }
        
        /// <remarks/>
        public void FinishStreamAsync(string identifier, object userState) {
            if ((this.FinishStreamOperationCompleted == null)) {
                this.FinishStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishStreamOperationCompleted);
            }
            this.InvokeAsync("FinishStream", new object[] {
                        identifier}, this.FinishStreamOperationCompleted, userState);
        }
        
        private void OnFinishStreamOperationCompleted(object arg) {
            if ((this.FinishStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishStreamCompleted(this, new FinishStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetStreamingSessions", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
            "rfaces")]
        public WebStreamingSession[] GetStreamingSessions() {
            object[] results = this.Invoke("GetStreamingSessions", new object[0]);
            return ((WebStreamingSession[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStreamingSessionsAsync() {
            this.GetStreamingSessionsAsync(null);
        }
        
        /// <remarks/>
        public void GetStreamingSessionsAsync(object userState) {
            if ((this.GetStreamingSessionsOperationCompleted == null)) {
                this.GetStreamingSessionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStreamingSessionsOperationCompleted);
            }
            this.InvokeAsync("GetStreamingSessions", new object[0], this.GetStreamingSessionsOperationCompleted, userState);
        }
        
        private void OnGetStreamingSessionsOperationCompleted(object arg) {
            if ((this.GetStreamingSessionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStreamingSessionsCompleted(this, new GetStreamingSessionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetStreamSize", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebResolution GetStreamSize(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> offset, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string profile) {
            object[] results = this.Invoke("GetStreamSize", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified,
                        profile});
            return ((WebResolution)(results[0]));
        }
        
        /// <remarks/>
        public void GetStreamSizeAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified, string profile) {
            this.GetStreamSizeAsync(type, typeSpecified, provider, providerSpecified, itemId, offset, offsetSpecified, profile, null);
        }
        
        /// <remarks/>
        public void GetStreamSizeAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified, string profile, object userState) {
            if ((this.GetStreamSizeOperationCompleted == null)) {
                this.GetStreamSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStreamSizeOperationCompleted);
            }
            this.InvokeAsync("GetStreamSize", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified,
                        profile}, this.GetStreamSizeOperationCompleted, userState);
        }
        
        private void OnGetStreamSizeOperationCompleted(object arg) {
            if ((this.GetStreamSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStreamSizeCompleted(this, new GetStreamSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/AuthorizeStreaming", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult AuthorizeStreaming() {
            object[] results = this.Invoke("AuthorizeStreaming", new object[0]);
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizeStreamingAsync() {
            this.AuthorizeStreamingAsync(null);
        }
        
        /// <remarks/>
        public void AuthorizeStreamingAsync(object userState) {
            if ((this.AuthorizeStreamingOperationCompleted == null)) {
                this.AuthorizeStreamingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizeStreamingOperationCompleted);
            }
            this.InvokeAsync("AuthorizeStreaming", new object[0], this.AuthorizeStreamingOperationCompleted, userState);
        }
        
        private void OnAuthorizeStreamingOperationCompleted(object arg) {
            if ((this.AuthorizeStreamingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizeStreamingCompleted(this, new AuthorizeStreamingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/AuthorizeRemoteHostForStreaming" +
            "", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult AuthorizeRemoteHostForStreaming([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string host) {
            object[] results = this.Invoke("AuthorizeRemoteHostForStreaming", new object[] {
                        host});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizeRemoteHostForStreamingAsync(string host) {
            this.AuthorizeRemoteHostForStreamingAsync(host, null);
        }
        
        /// <remarks/>
        public void AuthorizeRemoteHostForStreamingAsync(string host, object userState) {
            if ((this.AuthorizeRemoteHostForStreamingOperationCompleted == null)) {
                this.AuthorizeRemoteHostForStreamingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizeRemoteHostForStreamingOperationCompleted);
            }
            this.InvokeAsync("AuthorizeRemoteHostForStreaming", new object[] {
                        host}, this.AuthorizeRemoteHostForStreamingOperationCompleted, userState);
        }
        
        private void OnAuthorizeRemoteHostForStreamingOperationCompleted(object arg) {
            if ((this.AuthorizeRemoteHostForStreamingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizeRemoteHostForStreamingCompleted(this, new AuthorizeRemoteHostForStreamingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IWebStreamingService/GetItemSupportStatus", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemSupportStatus GetItemSupportStatus(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> offset, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified) {
            object[] results = this.Invoke("GetItemSupportStatus", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified});
            return ((WebItemSupportStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemSupportStatusAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified) {
            this.GetItemSupportStatusAsync(type, typeSpecified, provider, providerSpecified, itemId, offset, offsetSpecified, null);
        }
        
        /// <remarks/>
        public void GetItemSupportStatusAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<int> offset, bool offsetSpecified, object userState) {
            if ((this.GetItemSupportStatusOperationCompleted == null)) {
                this.GetItemSupportStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemSupportStatusOperationCompleted);
            }
            this.InvokeAsync("GetItemSupportStatus", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        offset,
                        offsetSpecified}, this.GetItemSupportStatusOperationCompleted, userState);
        }
        
        private void OnGetItemSupportStatusOperationCompleted(object arg) {
            if ((this.GetItemSupportStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemSupportStatusCompleted(this, new GetItemSupportStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: Das optionale WSDL-Erweiterungselement 'PolicyReference' von Namespace 'http://www.w3.org/ns/ws-policy' wurde nicht behandelt.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapEndpoint1", Namespace="http://tempuri.org/")]
    public partial class SoapEndpoint1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMediaItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomTranscoderDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtractImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtractImageResizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageResizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtworkResizedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SoapEndpoint1() {
            this.Url = "http://192.168.5.18:4322/MPExtended/StreamingService/soapstream";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMediaItemCompletedEventHandler GetMediaItemCompleted;
        
        /// <remarks/>
        public event RetrieveStreamCompletedEventHandler RetrieveStreamCompleted;
        
        /// <remarks/>
        public event DoStreamCompletedEventHandler DoStreamCompleted;
        
        /// <remarks/>
        public event CustomTranscoderDataCompletedEventHandler CustomTranscoderDataCompleted;
        
        /// <remarks/>
        public event ExtractImageCompletedEventHandler ExtractImageCompleted;
        
        /// <remarks/>
        public event ExtractImageResizedCompletedEventHandler ExtractImageResizedCompleted;
        
        /// <remarks/>
        public event GetImageCompletedEventHandler GetImageCompleted;
        
        /// <remarks/>
        public event GetImageResizedCompletedEventHandler GetImageResizedCompleted;
        
        /// <remarks/>
        public event GetArtworkCompletedEventHandler GetArtworkCompleted;
        
        /// <remarks/>
        public event GetArtworkResizedCompletedEventHandler GetArtworkResizedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/GetMediaItem", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetMediaItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientDescription, WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> startPosition, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startPositionSpecified) {
            object[] results = this.Invoke("GetMediaItem", new object[] {
                        clientDescription,
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        startPosition,
                        startPositionSpecified});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaItemAsync(string clientDescription, WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<long> startPosition, bool startPositionSpecified) {
            this.GetMediaItemAsync(clientDescription, type, typeSpecified, provider, providerSpecified, itemId, startPosition, startPositionSpecified, null);
        }
        
        /// <remarks/>
        public void GetMediaItemAsync(string clientDescription, WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, System.Nullable<long> startPosition, bool startPositionSpecified, object userState) {
            if ((this.GetMediaItemOperationCompleted == null)) {
                this.GetMediaItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaItemOperationCompleted);
            }
            this.InvokeAsync("GetMediaItem", new object[] {
                        clientDescription,
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        startPosition,
                        startPositionSpecified}, this.GetMediaItemOperationCompleted, userState);
        }
        
        private void OnGetMediaItemOperationCompleted(object arg) {
            if ((this.GetMediaItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaItemCompleted(this, new GetMediaItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/RetrieveStream", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RetrieveStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier) {
            object[] results = this.Invoke("RetrieveStream", new object[] {
                        identifier});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveStreamAsync(string identifier) {
            this.RetrieveStreamAsync(identifier, null);
        }
        
        /// <remarks/>
        public void RetrieveStreamAsync(string identifier, object userState) {
            if ((this.RetrieveStreamOperationCompleted == null)) {
                this.RetrieveStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveStreamOperationCompleted);
            }
            this.InvokeAsync("RetrieveStream", new object[] {
                        identifier}, this.RetrieveStreamOperationCompleted, userState);
        }
        
        private void OnRetrieveStreamOperationCompleted(object arg) {
            if ((this.RetrieveStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveStreamCompleted(this, new RetrieveStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/DoStream", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DoStream(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientDescription, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string profileName, long startPosition, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startPositionSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> idleTimeout, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool idleTimeoutSpecified) {
            object[] results = this.Invoke("DoStream", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        clientDescription,
                        profileName,
                        startPosition,
                        startPositionSpecified,
                        idleTimeout,
                        idleTimeoutSpecified});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DoStreamAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, string clientDescription, string profileName, long startPosition, bool startPositionSpecified, System.Nullable<int> idleTimeout, bool idleTimeoutSpecified) {
            this.DoStreamAsync(type, typeSpecified, provider, providerSpecified, itemId, clientDescription, profileName, startPosition, startPositionSpecified, idleTimeout, idleTimeoutSpecified, null);
        }
        
        /// <remarks/>
        public void DoStreamAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, string clientDescription, string profileName, long startPosition, bool startPositionSpecified, System.Nullable<int> idleTimeout, bool idleTimeoutSpecified, object userState) {
            if ((this.DoStreamOperationCompleted == null)) {
                this.DoStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoStreamOperationCompleted);
            }
            this.InvokeAsync("DoStream", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        clientDescription,
                        profileName,
                        startPosition,
                        startPositionSpecified,
                        idleTimeout,
                        idleTimeoutSpecified}, this.DoStreamOperationCompleted, userState);
        }
        
        private void OnDoStreamOperationCompleted(object arg) {
            if ((this.DoStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoStreamCompleted(this, new DoStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/CustomTranscoderData", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CustomTranscoderData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identifier, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string action, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string parameters) {
            object[] results = this.Invoke("CustomTranscoderData", new object[] {
                        identifier,
                        action,
                        parameters});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomTranscoderDataAsync(string identifier, string action, string parameters) {
            this.CustomTranscoderDataAsync(identifier, action, parameters, null);
        }
        
        /// <remarks/>
        public void CustomTranscoderDataAsync(string identifier, string action, string parameters, object userState) {
            if ((this.CustomTranscoderDataOperationCompleted == null)) {
                this.CustomTranscoderDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomTranscoderDataOperationCompleted);
            }
            this.InvokeAsync("CustomTranscoderData", new object[] {
                        identifier,
                        action,
                        parameters}, this.CustomTranscoderDataOperationCompleted, userState);
        }
        
        private void OnCustomTranscoderDataOperationCompleted(object arg) {
            if ((this.CustomTranscoderDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomTranscoderDataCompleted(this, new CustomTranscoderDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/ExtractImage", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExtractImage(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, long position, [System.Xml.Serialization.XmlIgnoreAttribute()] bool positionSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string format) {
            object[] results = this.Invoke("ExtractImage", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        position,
                        positionSpecified,
                        format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExtractImageAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, long position, bool positionSpecified, string format) {
            this.ExtractImageAsync(type, typeSpecified, provider, providerSpecified, itemId, position, positionSpecified, format, null);
        }
        
        /// <remarks/>
        public void ExtractImageAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, long position, bool positionSpecified, string format, object userState) {
            if ((this.ExtractImageOperationCompleted == null)) {
                this.ExtractImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtractImageOperationCompleted);
            }
            this.InvokeAsync("ExtractImage", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        position,
                        positionSpecified,
                        format}, this.ExtractImageOperationCompleted, userState);
        }
        
        private void OnExtractImageOperationCompleted(object arg) {
            if ((this.ExtractImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtractImageCompleted(this, new ExtractImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/ExtractImageResized", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExtractImageResized(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string itemId, long position, [System.Xml.Serialization.XmlIgnoreAttribute()] bool positionSpecified, int maxWidth, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxWidthSpecified, int maxHeight, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxHeightSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string borders, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string format) {
            object[] results = this.Invoke("ExtractImageResized", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        position,
                        positionSpecified,
                        maxWidth,
                        maxWidthSpecified,
                        maxHeight,
                        maxHeightSpecified,
                        borders,
                        format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExtractImageResizedAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, long position, bool positionSpecified, int maxWidth, bool maxWidthSpecified, int maxHeight, bool maxHeightSpecified, string borders, string format) {
            this.ExtractImageResizedAsync(type, typeSpecified, provider, providerSpecified, itemId, position, positionSpecified, maxWidth, maxWidthSpecified, maxHeight, maxHeightSpecified, borders, format, null);
        }
        
        /// <remarks/>
        public void ExtractImageResizedAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string itemId, long position, bool positionSpecified, int maxWidth, bool maxWidthSpecified, int maxHeight, bool maxHeightSpecified, string borders, string format, object userState) {
            if ((this.ExtractImageResizedOperationCompleted == null)) {
                this.ExtractImageResizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtractImageResizedOperationCompleted);
            }
            this.InvokeAsync("ExtractImageResized", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        itemId,
                        position,
                        positionSpecified,
                        maxWidth,
                        maxWidthSpecified,
                        maxHeight,
                        maxHeightSpecified,
                        borders,
                        format}, this.ExtractImageResizedOperationCompleted, userState);
        }
        
        private void OnExtractImageResizedOperationCompleted(object arg) {
            if ((this.ExtractImageResizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtractImageResizedCompleted(this, new ExtractImageResizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/GetImage", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImage(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string format) {
            object[] results = this.Invoke("GetImage", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImageAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string id, string format) {
            this.GetImageAsync(type, typeSpecified, provider, providerSpecified, id, format, null);
        }
        
        /// <remarks/>
        public void GetImageAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string id, string format, object userState) {
            if ((this.GetImageOperationCompleted == null)) {
                this.GetImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageOperationCompleted);
            }
            this.InvokeAsync("GetImage", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        format}, this.GetImageOperationCompleted, userState);
        }
        
        private void OnGetImageOperationCompleted(object arg) {
            if ((this.GetImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCompleted(this, new GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/GetImageResized", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImageResized(WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int maxWidth, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxWidthSpecified, int maxHeight, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxHeightSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string borders, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string format) {
            object[] results = this.Invoke("GetImageResized", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        maxWidth,
                        maxWidthSpecified,
                        maxHeight,
                        maxHeightSpecified,
                        borders,
                        format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImageResizedAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string id, int maxWidth, bool maxWidthSpecified, int maxHeight, bool maxHeightSpecified, string borders, string format) {
            this.GetImageResizedAsync(type, typeSpecified, provider, providerSpecified, id, maxWidth, maxWidthSpecified, maxHeight, maxHeightSpecified, borders, format, null);
        }
        
        /// <remarks/>
        public void GetImageResizedAsync(WebMediaType type, bool typeSpecified, System.Nullable<int> provider, bool providerSpecified, string id, int maxWidth, bool maxWidthSpecified, int maxHeight, bool maxHeightSpecified, string borders, string format, object userState) {
            if ((this.GetImageResizedOperationCompleted == null)) {
                this.GetImageResizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageResizedOperationCompleted);
            }
            this.InvokeAsync("GetImageResized", new object[] {
                        type,
                        typeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        maxWidth,
                        maxWidthSpecified,
                        maxHeight,
                        maxHeightSpecified,
                        borders,
                        format}, this.GetImageResizedOperationCompleted, userState);
        }
        
        private void OnGetImageResizedOperationCompleted(object arg) {
            if ((this.GetImageResizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageResizedCompleted(this, new GetImageResizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/GetArtwork", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetArtwork(WebMediaType mediatype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mediatypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, WebFileType artworktype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool artworktypeSpecified, int offset, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string format) {
            object[] results = this.Invoke("GetArtwork", new object[] {
                        mediatype,
                        mediatypeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        artworktype,
                        artworktypeSpecified,
                        offset,
                        offsetSpecified,
                        format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtworkAsync(WebMediaType mediatype, bool mediatypeSpecified, System.Nullable<int> provider, bool providerSpecified, string id, WebFileType artworktype, bool artworktypeSpecified, int offset, bool offsetSpecified, string format) {
            this.GetArtworkAsync(mediatype, mediatypeSpecified, provider, providerSpecified, id, artworktype, artworktypeSpecified, offset, offsetSpecified, format, null);
        }
        
        /// <remarks/>
        public void GetArtworkAsync(WebMediaType mediatype, bool mediatypeSpecified, System.Nullable<int> provider, bool providerSpecified, string id, WebFileType artworktype, bool artworktypeSpecified, int offset, bool offsetSpecified, string format, object userState) {
            if ((this.GetArtworkOperationCompleted == null)) {
                this.GetArtworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtworkOperationCompleted);
            }
            this.InvokeAsync("GetArtwork", new object[] {
                        mediatype,
                        mediatypeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        artworktype,
                        artworktypeSpecified,
                        offset,
                        offsetSpecified,
                        format}, this.GetArtworkOperationCompleted, userState);
        }
        
        private void OnGetArtworkOperationCompleted(object arg) {
            if ((this.GetArtworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtworkCompleted(this, new GetArtworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IStreamingService/GetArtworkResized", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetArtworkResized(WebMediaType mediatype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mediatypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, WebFileType artworktype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool artworktypeSpecified, int offset, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified, int maxWidth, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxWidthSpecified, int maxHeight, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxHeightSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string borders, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string format) {
            object[] results = this.Invoke("GetArtworkResized", new object[] {
                        mediatype,
                        mediatypeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        artworktype,
                        artworktypeSpecified,
                        offset,
                        offsetSpecified,
                        maxWidth,
                        maxWidthSpecified,
                        maxHeight,
                        maxHeightSpecified,
                        borders,
                        format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtworkResizedAsync(WebMediaType mediatype, bool mediatypeSpecified, System.Nullable<int> provider, bool providerSpecified, string id, WebFileType artworktype, bool artworktypeSpecified, int offset, bool offsetSpecified, int maxWidth, bool maxWidthSpecified, int maxHeight, bool maxHeightSpecified, string borders, string format) {
            this.GetArtworkResizedAsync(mediatype, mediatypeSpecified, provider, providerSpecified, id, artworktype, artworktypeSpecified, offset, offsetSpecified, maxWidth, maxWidthSpecified, maxHeight, maxHeightSpecified, borders, format, null);
        }
        
        /// <remarks/>
        public void GetArtworkResizedAsync(
                    WebMediaType mediatype, 
                    bool mediatypeSpecified, 
                    System.Nullable<int> provider, 
                    bool providerSpecified, 
                    string id, 
                    WebFileType artworktype, 
                    bool artworktypeSpecified, 
                    int offset, 
                    bool offsetSpecified, 
                    int maxWidth, 
                    bool maxWidthSpecified, 
                    int maxHeight, 
                    bool maxHeightSpecified, 
                    string borders, 
                    string format, 
                    object userState) {
            if ((this.GetArtworkResizedOperationCompleted == null)) {
                this.GetArtworkResizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtworkResizedOperationCompleted);
            }
            this.InvokeAsync("GetArtworkResized", new object[] {
                        mediatype,
                        mediatypeSpecified,
                        provider,
                        providerSpecified,
                        id,
                        artworktype,
                        artworktypeSpecified,
                        offset,
                        offsetSpecified,
                        maxWidth,
                        maxWidthSpecified,
                        maxHeight,
                        maxHeightSpecified,
                        borders,
                        format}, this.GetArtworkResizedOperationCompleted, userState);
        }
        
        private void OnGetArtworkResizedOperationCompleted(object arg) {
            if ((this.GetArtworkResizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtworkResizedCompleted(this, new GetArtworkResizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebStreamServiceDescription {
        
        private int apiVersionField;
        
        private bool apiVersionFieldSpecified;
        
        private string serviceVersionField;
        
        private bool supportsMediaField;
        
        private bool supportsMediaFieldSpecified;
        
        private bool supportsRecordingsField;
        
        private bool supportsRecordingsFieldSpecified;
        
        private bool supportsTVField;
        
        private bool supportsTVFieldSpecified;
        
        /// <remarks/>
        public int ApiVersion {
            get {
                return this.apiVersionField;
            }
            set {
                this.apiVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApiVersionSpecified {
            get {
                return this.apiVersionFieldSpecified;
            }
            set {
                this.apiVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServiceVersion {
            get {
                return this.serviceVersionField;
            }
            set {
                this.serviceVersionField = value;
            }
        }
        
        /// <remarks/>
        public bool SupportsMedia {
            get {
                return this.supportsMediaField;
            }
            set {
                this.supportsMediaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportsMediaSpecified {
            get {
                return this.supportsMediaFieldSpecified;
            }
            set {
                this.supportsMediaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SupportsRecordings {
            get {
                return this.supportsRecordingsField;
            }
            set {
                this.supportsRecordingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportsRecordingsSpecified {
            get {
                return this.supportsRecordingsFieldSpecified;
            }
            set {
                this.supportsRecordingsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SupportsTV {
            get {
                return this.supportsTVField;
            }
            set {
                this.supportsTVField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportsTVSpecified {
            get {
                return this.supportsTVFieldSpecified;
            }
            set {
                this.supportsTVFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebItemSupportStatus {
        
        private string reasonField;
        
        private bool supportedField;
        
        private bool supportedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public bool Supported {
            get {
                return this.supportedField;
            }
            set {
                this.supportedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportedSpecified {
            get {
                return this.supportedFieldSpecified;
            }
            set {
                this.supportedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebResolution {
        
        private int heightField;
        
        private bool heightFieldSpecified;
        
        private int widthField;
        
        private bool widthFieldSpecified;
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebStreamingSession {
        
        private string clientDescriptionField;
        
        private string clientIPAddressField;
        
        private string displayNameField;
        
        private string identifierField;
        
        private int percentageProgressField;
        
        private bool percentageProgressFieldSpecified;
        
        private long playerPositionField;
        
        private bool playerPositionFieldSpecified;
        
        private string profileField;
        
        private string sourceIdField;
        
        private WebMediaType sourceTypeField;
        
        private bool sourceTypeFieldSpecified;
        
        private long startPositionField;
        
        private bool startPositionFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private WebTranscodingInfo transcodingInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientDescription {
            get {
                return this.clientDescriptionField;
            }
            set {
                this.clientDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientIPAddress {
            get {
                return this.clientIPAddressField;
            }
            set {
                this.clientIPAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public int PercentageProgress {
            get {
                return this.percentageProgressField;
            }
            set {
                this.percentageProgressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentageProgressSpecified {
            get {
                return this.percentageProgressFieldSpecified;
            }
            set {
                this.percentageProgressFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long PlayerPosition {
            get {
                return this.playerPositionField;
            }
            set {
                this.playerPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlayerPositionSpecified {
            get {
                return this.playerPositionFieldSpecified;
            }
            set {
                this.playerPositionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Profile {
            get {
                return this.profileField;
            }
            set {
                this.profileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        public WebMediaType SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceTypeSpecified {
            get {
                return this.sourceTypeFieldSpecified;
            }
            set {
                this.sourceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long StartPosition {
            get {
                return this.startPositionField;
            }
            set {
                this.startPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartPositionSpecified {
            get {
                return this.startPositionFieldSpecified;
            }
            set {
                this.startPositionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTranscodingInfo TranscodingInfo {
            get {
                return this.transcodingInfoField;
            }
            set {
                this.transcodingInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public enum WebMediaType {
        
        /// <remarks/>
        Movie,
        
        /// <remarks/>
        MusicTrack,
        
        /// <remarks/>
        Picture,
        
        /// <remarks/>
        TVEpisode,
        
        /// <remarks/>
        File,
        
        /// <remarks/>
        TVShow,
        
        /// <remarks/>
        TVSeason,
        
        /// <remarks/>
        MusicAlbum,
        
        /// <remarks/>
        MusicArtist,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        Drive,
        
        /// <remarks/>
        Playlist,
        
        /// <remarks/>
        TV,
        
        /// <remarks/>
        Recording,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebTranscodingInfo {
        
        private bool failedField;
        
        private bool failedFieldSpecified;
        
        private bool finishedField;
        
        private bool finishedFieldSpecified;
        
        private long outputBitrateField;
        
        private bool outputBitrateFieldSpecified;
        
        private bool supportedField;
        
        private bool supportedFieldSpecified;
        
        private long transcodedFramesField;
        
        private bool transcodedFramesFieldSpecified;
        
        private long transcodedTimeField;
        
        private bool transcodedTimeFieldSpecified;
        
        private long transcodingFPSField;
        
        private bool transcodingFPSFieldSpecified;
        
        private long transcodingPositionField;
        
        private bool transcodingPositionFieldSpecified;
        
        /// <remarks/>
        public bool Failed {
            get {
                return this.failedField;
            }
            set {
                this.failedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FailedSpecified {
            get {
                return this.failedFieldSpecified;
            }
            set {
                this.failedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Finished {
            get {
                return this.finishedField;
            }
            set {
                this.finishedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinishedSpecified {
            get {
                return this.finishedFieldSpecified;
            }
            set {
                this.finishedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long OutputBitrate {
            get {
                return this.outputBitrateField;
            }
            set {
                this.outputBitrateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputBitrateSpecified {
            get {
                return this.outputBitrateFieldSpecified;
            }
            set {
                this.outputBitrateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Supported {
            get {
                return this.supportedField;
            }
            set {
                this.supportedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportedSpecified {
            get {
                return this.supportedFieldSpecified;
            }
            set {
                this.supportedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long TranscodedFrames {
            get {
                return this.transcodedFramesField;
            }
            set {
                this.transcodedFramesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TranscodedFramesSpecified {
            get {
                return this.transcodedFramesFieldSpecified;
            }
            set {
                this.transcodedFramesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long TranscodedTime {
            get {
                return this.transcodedTimeField;
            }
            set {
                this.transcodedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TranscodedTimeSpecified {
            get {
                return this.transcodedTimeFieldSpecified;
            }
            set {
                this.transcodedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long TranscodingFPS {
            get {
                return this.transcodingFPSField;
            }
            set {
                this.transcodingFPSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TranscodingFPSSpecified {
            get {
                return this.transcodingFPSFieldSpecified;
            }
            set {
                this.transcodingFPSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long TranscodingPosition {
            get {
                return this.transcodingPositionField;
            }
            set {
                this.transcodingPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TranscodingPositionSpecified {
            get {
                return this.transcodingPositionFieldSpecified;
            }
            set {
                this.transcodingPositionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public partial class WebStringResult {
        
        private string resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public partial class WebBoolResult {
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebVideoStream {
        
        private string codecField;
        
        private decimal displayAspectRatioField;
        
        private bool displayAspectRatioFieldSpecified;
        
        private string displayAspectRatioStringField;
        
        private int heightField;
        
        private bool heightFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int indexField;
        
        private bool indexFieldSpecified;
        
        private int widthField;
        
        private bool widthFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Codec {
            get {
                return this.codecField;
            }
            set {
                this.codecField = value;
            }
        }
        
        /// <remarks/>
        public decimal DisplayAspectRatio {
            get {
                return this.displayAspectRatioField;
            }
            set {
                this.displayAspectRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplayAspectRatioSpecified {
            get {
                return this.displayAspectRatioFieldSpecified;
            }
            set {
                this.displayAspectRatioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DisplayAspectRatioString {
            get {
                return this.displayAspectRatioStringField;
            }
            set {
                this.displayAspectRatioStringField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebSubtitleStream {
        
        private string filenameField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int indexField;
        
        private bool indexFieldSpecified;
        
        private string languageField;
        
        private string languageFullField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LanguageFull {
            get {
                return this.languageFullField;
            }
            set {
                this.languageFullField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebAudioStream {
        
        private int channelsField;
        
        private bool channelsFieldSpecified;
        
        private string codecField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int indexField;
        
        private bool indexFieldSpecified;
        
        private string languageField;
        
        private string languageFullField;
        
        private string titleField;
        
        /// <remarks/>
        public int Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelsSpecified {
            get {
                return this.channelsFieldSpecified;
            }
            set {
                this.channelsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Codec {
            get {
                return this.codecField;
            }
            set {
                this.codecField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LanguageFull {
            get {
                return this.languageFullField;
            }
            set {
                this.languageFullField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebMediaInfo {
        
        private WebAudioStream[] audioStreamsField;
        
        private string containerField;
        
        private long durationField;
        
        private bool durationFieldSpecified;
        
        private WebSubtitleStream[] subtitleStreamsField;
        
        private WebVideoStream[] videoStreamsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebAudioStream[] AudioStreams {
            get {
                return this.audioStreamsField;
            }
            set {
                this.audioStreamsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Container {
            get {
                return this.containerField;
            }
            set {
                this.containerField = value;
            }
        }
        
        /// <remarks/>
        public long Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebSubtitleStream[] SubtitleStreams {
            get {
                return this.subtitleStreamsField;
            }
            set {
                this.subtitleStreamsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebVideoStream[] VideoStreams {
            get {
                return this.videoStreamsField;
            }
            set {
                this.videoStreamsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.StreamingService.Inte" +
        "rfaces")]
    public partial class WebTranscoderProfile {
        
        private int bandwidthField;
        
        private bool bandwidthFieldSpecified;
        
        private string descriptionField;
        
        private bool hasVideoStreamField;
        
        private bool hasVideoStreamFieldSpecified;
        
        private string mIMEField;
        
        private int maxOutputHeightField;
        
        private bool maxOutputHeightFieldSpecified;
        
        private int maxOutputWidthField;
        
        private bool maxOutputWidthFieldSpecified;
        
        private string nameField;
        
        private string[] targetsField;
        
        private string transportField;
        
        /// <remarks/>
        public int Bandwidth {
            get {
                return this.bandwidthField;
            }
            set {
                this.bandwidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BandwidthSpecified {
            get {
                return this.bandwidthFieldSpecified;
            }
            set {
                this.bandwidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool HasVideoStream {
            get {
                return this.hasVideoStreamField;
            }
            set {
                this.hasVideoStreamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasVideoStreamSpecified {
            get {
                return this.hasVideoStreamFieldSpecified;
            }
            set {
                this.hasVideoStreamFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MIME {
            get {
                return this.mIMEField;
            }
            set {
                this.mIMEField = value;
            }
        }
        
        /// <remarks/>
        public int MaxOutputHeight {
            get {
                return this.maxOutputHeightField;
            }
            set {
                this.maxOutputHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxOutputHeightSpecified {
            get {
                return this.maxOutputHeightFieldSpecified;
            }
            set {
                this.maxOutputHeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxOutputWidth {
            get {
                return this.maxOutputWidthField;
            }
            set {
                this.maxOutputWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxOutputWidthSpecified {
            get {
                return this.maxOutputWidthFieldSpecified;
            }
            set {
                this.maxOutputWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Targets {
            get {
                return this.targetsField;
            }
            set {
                this.targetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Transport {
            get {
                return this.transportField;
            }
            set {
                this.transportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public enum WebFileType {
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        Backdrop,
        
        /// <remarks/>
        Banner,
        
        /// <remarks/>
        Poster,
        
        /// <remarks/>
        Cover,
        
        /// <remarks/>
        Logo,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceDescriptionCompletedEventHandler(object sender, GetServiceDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStreamServiceDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStreamServiceDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTranscoderProfilesCompletedEventHandler(object sender, GetTranscoderProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranscoderProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTranscoderProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTranscoderProfile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTranscoderProfile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTranscoderProfilesForTargetCompletedEventHandler(object sender, GetTranscoderProfilesForTargetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranscoderProfilesForTargetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTranscoderProfilesForTargetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTranscoderProfile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTranscoderProfile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTranscoderProfileByNameCompletedEventHandler(object sender, GetTranscoderProfileByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranscoderProfileByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTranscoderProfileByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTranscoderProfile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTranscoderProfile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMediaInfoCompletedEventHandler(object sender, GetMediaInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMediaInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMediaInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTranscodingInfoCompletedEventHandler(object sender, GetTranscodingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranscodingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTranscodingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTranscodingInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTranscodingInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InitStreamCompletedEventHandler(object sender, InitStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartStreamCompletedEventHandler(object sender, StartStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStringResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStringResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartStreamWithStreamSelectionCompletedEventHandler(object sender, StartStreamWithStreamSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartStreamWithStreamSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartStreamWithStreamSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStringResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStringResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StopStreamCompletedEventHandler(object sender, StopStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FinishStreamCompletedEventHandler(object sender, FinishStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStreamingSessionsCompletedEventHandler(object sender, GetStreamingSessionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStreamingSessionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStreamingSessionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStreamingSession[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStreamingSession[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStreamSizeCompletedEventHandler(object sender, GetStreamSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStreamSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStreamSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebResolution Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebResolution)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthorizeStreamingCompletedEventHandler(object sender, AuthorizeStreamingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizeStreamingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizeStreamingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthorizeRemoteHostForStreamingCompletedEventHandler(object sender, AuthorizeRemoteHostForStreamingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizeRemoteHostForStreamingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizeRemoteHostForStreamingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemSupportStatusCompletedEventHandler(object sender, GetItemSupportStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemSupportStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemSupportStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemSupportStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemSupportStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMediaItemCompletedEventHandler(object sender, GetMediaItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveStreamCompletedEventHandler(object sender, RetrieveStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DoStreamCompletedEventHandler(object sender, DoStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CustomTranscoderDataCompletedEventHandler(object sender, CustomTranscoderDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomTranscoderDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomTranscoderDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExtractImageCompletedEventHandler(object sender, ExtractImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtractImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtractImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExtractImageResizedCompletedEventHandler(object sender, ExtractImageResizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtractImageResizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtractImageResizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetImageCompletedEventHandler(object sender, GetImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetImageResizedCompletedEventHandler(object sender, GetImageResizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageResizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageResizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetArtworkCompletedEventHandler(object sender, GetArtworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetArtworkResizedCompletedEventHandler(object sender, GetArtworkResizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtworkResizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtworkResizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591