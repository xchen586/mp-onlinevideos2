//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1008
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace OnlineVideos.Sites.MpExtendedTvService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    // CODEGEN: Das optionale WSDL-Erweiterungselement 'PolicyReference' von Namespace 'http://www.w3.org/ns/ws-policy' wurde nicht behandelt.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapEndpoint", Namespace="http://tempuri.org/")]
    public partial class TVAccessService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SwitchTVServerToChannelAndGetTimeshiftFilenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendHeartbeatOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelCurrentTimeShiftingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramsBasicForChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramsDetailedForChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramsBasicForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramsDetailedForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentProgramOnChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextProgramOnChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchProgramsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchProgramsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchProgramsBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchProgramsDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchProgramsDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNowNextWebProgramBasicForChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNowNextWebProgramDetailedForChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramIsScheduledOnChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramIsScheduledOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordingByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordingFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadRecordingFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupsByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelsBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelsDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelsDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllChannelStatesForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioGroupCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioGroupsByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioGroupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioChannelCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioChannelsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioChannelsBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioChannelsDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadioChannelsDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRadioChannelStatesForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwitchTVServerToChannelAndGetVirtualCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwitchTVServerToChannelAndGetStreamingUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectionToTVServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadSettingFromDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteSettingToDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocalDiskInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalMediaInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchResultsByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStreamingClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRecordingDiskInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordingDiskInformationForCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartRecordingManualOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduledRecordingsForDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduledRecordingsForTodayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordingCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordingsByRangeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TVAccessService() {
            this.Url = "http://192.168.5.18:4322/MPExtended/TVAccessService/";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SwitchTVServerToChannelAndGetTimeshiftFilenameCompletedEventHandler SwitchTVServerToChannelAndGetTimeshiftFilenameCompleted;
        
        /// <remarks/>
        public event SendHeartbeatCompletedEventHandler SendHeartbeatCompleted;
        
        /// <remarks/>
        public event CancelCurrentTimeShiftingCompletedEventHandler CancelCurrentTimeShiftingCompleted;
        
        /// <remarks/>
        public event GetProgramsBasicForChannelCompletedEventHandler GetProgramsBasicForChannelCompleted;
        
        /// <remarks/>
        public event GetProgramsDetailedForChannelCompletedEventHandler GetProgramsDetailedForChannelCompleted;
        
        /// <remarks/>
        public event GetProgramsBasicForGroupCompletedEventHandler GetProgramsBasicForGroupCompleted;
        
        /// <remarks/>
        public event GetProgramsDetailedForGroupCompletedEventHandler GetProgramsDetailedForGroupCompleted;
        
        /// <remarks/>
        public event GetCurrentProgramOnChannelCompletedEventHandler GetCurrentProgramOnChannelCompleted;
        
        /// <remarks/>
        public event GetNextProgramOnChannelCompletedEventHandler GetNextProgramOnChannelCompleted;
        
        /// <remarks/>
        public event SearchProgramsCountCompletedEventHandler SearchProgramsCountCompleted;
        
        /// <remarks/>
        public event SearchProgramsBasicCompletedEventHandler SearchProgramsBasicCompleted;
        
        /// <remarks/>
        public event SearchProgramsBasicByRangeCompletedEventHandler SearchProgramsBasicByRangeCompleted;
        
        /// <remarks/>
        public event SearchProgramsDetailedCompletedEventHandler SearchProgramsDetailedCompleted;
        
        /// <remarks/>
        public event SearchProgramsDetailedByRangeCompletedEventHandler SearchProgramsDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetNowNextWebProgramBasicForChannelCompletedEventHandler GetNowNextWebProgramBasicForChannelCompleted;
        
        /// <remarks/>
        public event GetNowNextWebProgramDetailedForChannelCompletedEventHandler GetNowNextWebProgramDetailedForChannelCompleted;
        
        /// <remarks/>
        public event GetProgramBasicByIdCompletedEventHandler GetProgramBasicByIdCompleted;
        
        /// <remarks/>
        public event GetProgramDetailedByIdCompletedEventHandler GetProgramDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetProgramIsScheduledOnChannelCompletedEventHandler GetProgramIsScheduledOnChannelCompleted;
        
        /// <remarks/>
        public event GetProgramIsScheduledCompletedEventHandler GetProgramIsScheduledCompleted;
        
        /// <remarks/>
        public event GetRecordingByIdCompletedEventHandler GetRecordingByIdCompleted;
        
        /// <remarks/>
        public event GetRecordingFileInfoCompletedEventHandler GetRecordingFileInfoCompleted;
        
        /// <remarks/>
        public event ReadRecordingFileCompletedEventHandler ReadRecordingFileCompleted;
        
        /// <remarks/>
        public event GetGroupCountCompletedEventHandler GetGroupCountCompleted;
        
        /// <remarks/>
        public event GetGroupsCompletedEventHandler GetGroupsCompleted;
        
        /// <remarks/>
        public event GetGroupsByRangeCompletedEventHandler GetGroupsByRangeCompleted;
        
        /// <remarks/>
        public event GetGroupByIdCompletedEventHandler GetGroupByIdCompleted;
        
        /// <remarks/>
        public event GetChannelCountCompletedEventHandler GetChannelCountCompleted;
        
        /// <remarks/>
        public event GetChannelsBasicCompletedEventHandler GetChannelsBasicCompleted;
        
        /// <remarks/>
        public event GetChannelsBasicByRangeCompletedEventHandler GetChannelsBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetChannelsDetailedCompletedEventHandler GetChannelsDetailedCompleted;
        
        /// <remarks/>
        public event GetChannelsDetailedByRangeCompletedEventHandler GetChannelsDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetAllChannelStatesForGroupCompletedEventHandler GetAllChannelStatesForGroupCompleted;
        
        /// <remarks/>
        public event GetRadioGroupCountCompletedEventHandler GetRadioGroupCountCompleted;
        
        /// <remarks/>
        public event GetRadioGroupsCompletedEventHandler GetRadioGroupsCompleted;
        
        /// <remarks/>
        public event GetRadioGroupsByRangeCompletedEventHandler GetRadioGroupsByRangeCompleted;
        
        /// <remarks/>
        public event GetRadioGroupByIdCompletedEventHandler GetRadioGroupByIdCompleted;
        
        /// <remarks/>
        public event GetRadioChannelCountCompletedEventHandler GetRadioChannelCountCompleted;
        
        /// <remarks/>
        public event GetRadioChannelsBasicCompletedEventHandler GetRadioChannelsBasicCompleted;
        
        /// <remarks/>
        public event GetRadioChannelsBasicByRangeCompletedEventHandler GetRadioChannelsBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetRadioChannelsDetailedCompletedEventHandler GetRadioChannelsDetailedCompleted;
        
        /// <remarks/>
        public event GetRadioChannelsDetailedByRangeCompletedEventHandler GetRadioChannelsDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetAllRadioChannelStatesForGroupCompletedEventHandler GetAllRadioChannelStatesForGroupCompleted;
        
        /// <remarks/>
        public event GetChannelBasicByIdCompletedEventHandler GetChannelBasicByIdCompleted;
        
        /// <remarks/>
        public event GetChannelDetailedByIdCompletedEventHandler GetChannelDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetChannelStateCompletedEventHandler GetChannelStateCompleted;
        
        /// <remarks/>
        public event SwitchTVServerToChannelAndGetVirtualCardCompletedEventHandler SwitchTVServerToChannelAndGetVirtualCardCompleted;
        
        /// <remarks/>
        public event SwitchTVServerToChannelAndGetStreamingUrlCompletedEventHandler SwitchTVServerToChannelAndGetStreamingUrlCompleted;
        
        /// <remarks/>
        public event GetServiceDescriptionCompletedEventHandler GetServiceDescriptionCompleted;
        
        /// <remarks/>
        public event TestConnectionToTVServiceCompletedEventHandler TestConnectionToTVServiceCompleted;
        
        /// <remarks/>
        public event ReadSettingFromDatabaseCompletedEventHandler ReadSettingFromDatabaseCompleted;
        
        /// <remarks/>
        public event WriteSettingToDatabaseCompletedEventHandler WriteSettingToDatabaseCompleted;
        
        /// <remarks/>
        public event GetLocalDiskInformationCompletedEventHandler GetLocalDiskInformationCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event GetExternalMediaInfoCompletedEventHandler GetExternalMediaInfoCompleted;
        
        /// <remarks/>
        public event SearchResultsByRangeCompletedEventHandler SearchResultsByRangeCompleted;
        
        /// <remarks/>
        public event GetCardsCompletedEventHandler GetCardsCompleted;
        
        /// <remarks/>
        public event GetActiveCardsCompletedEventHandler GetActiveCardsCompleted;
        
        /// <remarks/>
        public event GetActiveUsersCompletedEventHandler GetActiveUsersCompleted;
        
        /// <remarks/>
        public event GetStreamingClientsCompletedEventHandler GetStreamingClientsCompleted;
        
        /// <remarks/>
        public event GetAllRecordingDiskInformationCompletedEventHandler GetAllRecordingDiskInformationCompleted;
        
        /// <remarks/>
        public event GetRecordingDiskInformationForCardCompletedEventHandler GetRecordingDiskInformationForCardCompleted;
        
        /// <remarks/>
        public event StartRecordingManualCompletedEventHandler StartRecordingManualCompleted;
        
        /// <remarks/>
        public event AddScheduleCompletedEventHandler AddScheduleCompleted;
        
        /// <remarks/>
        public event AddScheduleDetailedCompletedEventHandler AddScheduleDetailedCompleted;
        
        /// <remarks/>
        public event GetScheduleCountCompletedEventHandler GetScheduleCountCompleted;
        
        /// <remarks/>
        public event GetSchedulesCompletedEventHandler GetSchedulesCompleted;
        
        /// <remarks/>
        public event GetSchedulesByRangeCompletedEventHandler GetSchedulesByRangeCompleted;
        
        /// <remarks/>
        public event GetScheduleByIdCompletedEventHandler GetScheduleByIdCompleted;
        
        /// <remarks/>
        public event CancelScheduleCompletedEventHandler CancelScheduleCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event GetScheduledRecordingsForDateCompletedEventHandler GetScheduledRecordingsForDateCompleted;
        
        /// <remarks/>
        public event GetScheduledRecordingsForTodayCompletedEventHandler GetScheduledRecordingsForTodayCompleted;
        
        /// <remarks/>
        public event GetRecordingCountCompletedEventHandler GetRecordingCountCompleted;
        
        /// <remarks/>
        public event GetRecordingsCompletedEventHandler GetRecordingsCompleted;
        
        /// <remarks/>
        public event GetRecordingsByRangeCompletedEventHandler GetRecordingsByRangeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SwitchTVServerToChannelAndGetTimesh" +
            "iftFilename", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebStringResult SwitchTVServerToChannelAndGetTimeshiftFilename([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("SwitchTVServerToChannelAndGetTimeshiftFilename", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified});
            return ((WebStringResult)(results[0]));
        }
        
        /// <remarks/>
        public void SwitchTVServerToChannelAndGetTimeshiftFilenameAsync(string userName, int channelId, bool channelIdSpecified) {
            this.SwitchTVServerToChannelAndGetTimeshiftFilenameAsync(userName, channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void SwitchTVServerToChannelAndGetTimeshiftFilenameAsync(string userName, int channelId, bool channelIdSpecified, object userState) {
            if ((this.SwitchTVServerToChannelAndGetTimeshiftFilenameOperationCompleted == null)) {
                this.SwitchTVServerToChannelAndGetTimeshiftFilenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwitchTVServerToChannelAndGetTimeshiftFilenameOperationCompleted);
            }
            this.InvokeAsync("SwitchTVServerToChannelAndGetTimeshiftFilename", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified}, this.SwitchTVServerToChannelAndGetTimeshiftFilenameOperationCompleted, userState);
        }
        
        private void OnSwitchTVServerToChannelAndGetTimeshiftFilenameOperationCompleted(object arg) {
            if ((this.SwitchTVServerToChannelAndGetTimeshiftFilenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwitchTVServerToChannelAndGetTimeshiftFilenameCompleted(this, new SwitchTVServerToChannelAndGetTimeshiftFilenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SendHeartbeat", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult SendHeartbeat([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName) {
            object[] results = this.Invoke("SendHeartbeat", new object[] {
                        userName});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendHeartbeatAsync(string userName) {
            this.SendHeartbeatAsync(userName, null);
        }
        
        /// <remarks/>
        public void SendHeartbeatAsync(string userName, object userState) {
            if ((this.SendHeartbeatOperationCompleted == null)) {
                this.SendHeartbeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendHeartbeatOperationCompleted);
            }
            this.InvokeAsync("SendHeartbeat", new object[] {
                        userName}, this.SendHeartbeatOperationCompleted, userState);
        }
        
        private void OnSendHeartbeatOperationCompleted(object arg) {
            if ((this.SendHeartbeatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendHeartbeatCompleted(this, new SendHeartbeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/CancelCurrentTimeShifting", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult CancelCurrentTimeShifting([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName) {
            object[] results = this.Invoke("CancelCurrentTimeShifting", new object[] {
                        userName});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void CancelCurrentTimeShiftingAsync(string userName) {
            this.CancelCurrentTimeShiftingAsync(userName, null);
        }
        
        /// <remarks/>
        public void CancelCurrentTimeShiftingAsync(string userName, object userState) {
            if ((this.CancelCurrentTimeShiftingOperationCompleted == null)) {
                this.CancelCurrentTimeShiftingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelCurrentTimeShiftingOperationCompleted);
            }
            this.InvokeAsync("CancelCurrentTimeShifting", new object[] {
                        userName}, this.CancelCurrentTimeShiftingOperationCompleted, userState);
        }
        
        private void OnCancelCurrentTimeShiftingOperationCompleted(object arg) {
            if ((this.CancelCurrentTimeShiftingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCurrentTimeShiftingCompleted(this, new CancelCurrentTimeShiftingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramsBasicForChannel", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramBasic[] GetProgramsBasicForChannel(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified, System.DateTime startTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, System.DateTime endTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified) {
            object[] results = this.Invoke("GetProgramsBasicForChannel", new object[] {
                        channelId,
                        channelIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified});
            return ((WebProgramBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramsBasicForChannelAsync(int channelId, bool channelIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified) {
            this.GetProgramsBasicForChannelAsync(channelId, channelIdSpecified, startTime, startTimeSpecified, endTime, endTimeSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramsBasicForChannelAsync(int channelId, bool channelIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, object userState) {
            if ((this.GetProgramsBasicForChannelOperationCompleted == null)) {
                this.GetProgramsBasicForChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramsBasicForChannelOperationCompleted);
            }
            this.InvokeAsync("GetProgramsBasicForChannel", new object[] {
                        channelId,
                        channelIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified}, this.GetProgramsBasicForChannelOperationCompleted, userState);
        }
        
        private void OnGetProgramsBasicForChannelOperationCompleted(object arg) {
            if ((this.GetProgramsBasicForChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramsBasicForChannelCompleted(this, new GetProgramsBasicForChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramsDetailedForChannel", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramDetailed[] GetProgramsDetailedForChannel(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified, System.DateTime startTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, System.DateTime endTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified) {
            object[] results = this.Invoke("GetProgramsDetailedForChannel", new object[] {
                        channelId,
                        channelIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified});
            return ((WebProgramDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramsDetailedForChannelAsync(int channelId, bool channelIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified) {
            this.GetProgramsDetailedForChannelAsync(channelId, channelIdSpecified, startTime, startTimeSpecified, endTime, endTimeSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramsDetailedForChannelAsync(int channelId, bool channelIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, object userState) {
            if ((this.GetProgramsDetailedForChannelOperationCompleted == null)) {
                this.GetProgramsDetailedForChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramsDetailedForChannelOperationCompleted);
            }
            this.InvokeAsync("GetProgramsDetailedForChannel", new object[] {
                        channelId,
                        channelIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified}, this.GetProgramsDetailedForChannelOperationCompleted, userState);
        }
        
        private void OnGetProgramsDetailedForChannelOperationCompleted(object arg) {
            if ((this.GetProgramsDetailedForChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramsDetailedForChannelCompleted(this, new GetProgramsDetailedForChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramsBasicForGroup", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelProgramsOfWebProgramBasicmOh5d_SPI[] GetProgramsBasicForGroup(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, System.DateTime startTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, System.DateTime endTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified) {
            object[] results = this.Invoke("GetProgramsBasicForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified});
            return ((WebChannelProgramsOfWebProgramBasicmOh5d_SPI[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramsBasicForGroupAsync(int groupId, bool groupIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified) {
            this.GetProgramsBasicForGroupAsync(groupId, groupIdSpecified, startTime, startTimeSpecified, endTime, endTimeSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramsBasicForGroupAsync(int groupId, bool groupIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, object userState) {
            if ((this.GetProgramsBasicForGroupOperationCompleted == null)) {
                this.GetProgramsBasicForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramsBasicForGroupOperationCompleted);
            }
            this.InvokeAsync("GetProgramsBasicForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified}, this.GetProgramsBasicForGroupOperationCompleted, userState);
        }
        
        private void OnGetProgramsBasicForGroupOperationCompleted(object arg) {
            if ((this.GetProgramsBasicForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramsBasicForGroupCompleted(this, new GetProgramsBasicForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramsDetailedForGroup", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelProgramsOfWebProgramDetailedmOh5d_SPI[] GetProgramsDetailedForGroup(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, System.DateTime startTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, System.DateTime endTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified) {
            object[] results = this.Invoke("GetProgramsDetailedForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified});
            return ((WebChannelProgramsOfWebProgramDetailedmOh5d_SPI[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramsDetailedForGroupAsync(int groupId, bool groupIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified) {
            this.GetProgramsDetailedForGroupAsync(groupId, groupIdSpecified, startTime, startTimeSpecified, endTime, endTimeSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramsDetailedForGroupAsync(int groupId, bool groupIdSpecified, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, object userState) {
            if ((this.GetProgramsDetailedForGroupOperationCompleted == null)) {
                this.GetProgramsDetailedForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramsDetailedForGroupOperationCompleted);
            }
            this.InvokeAsync("GetProgramsDetailedForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified}, this.GetProgramsDetailedForGroupOperationCompleted, userState);
        }
        
        private void OnGetProgramsDetailedForGroupOperationCompleted(object arg) {
            if ((this.GetProgramsDetailedForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramsDetailedForGroupCompleted(this, new GetProgramsDetailedForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetCurrentProgramOnChannel", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebProgramDetailed GetCurrentProgramOnChannel(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("GetCurrentProgramOnChannel", new object[] {
                        channelId,
                        channelIdSpecified});
            return ((WebProgramDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentProgramOnChannelAsync(int channelId, bool channelIdSpecified) {
            this.GetCurrentProgramOnChannelAsync(channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetCurrentProgramOnChannelAsync(int channelId, bool channelIdSpecified, object userState) {
            if ((this.GetCurrentProgramOnChannelOperationCompleted == null)) {
                this.GetCurrentProgramOnChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentProgramOnChannelOperationCompleted);
            }
            this.InvokeAsync("GetCurrentProgramOnChannel", new object[] {
                        channelId,
                        channelIdSpecified}, this.GetCurrentProgramOnChannelOperationCompleted, userState);
        }
        
        private void OnGetCurrentProgramOnChannelOperationCompleted(object arg) {
            if ((this.GetCurrentProgramOnChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentProgramOnChannelCompleted(this, new GetCurrentProgramOnChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetNextProgramOnChannel", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebProgramDetailed GetNextProgramOnChannel(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("GetNextProgramOnChannel", new object[] {
                        channelId,
                        channelIdSpecified});
            return ((WebProgramDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextProgramOnChannelAsync(int channelId, bool channelIdSpecified) {
            this.GetNextProgramOnChannelAsync(channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetNextProgramOnChannelAsync(int channelId, bool channelIdSpecified, object userState) {
            if ((this.GetNextProgramOnChannelOperationCompleted == null)) {
                this.GetNextProgramOnChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextProgramOnChannelOperationCompleted);
            }
            this.InvokeAsync("GetNextProgramOnChannel", new object[] {
                        channelId,
                        channelIdSpecified}, this.GetNextProgramOnChannelOperationCompleted, userState);
        }
        
        private void OnGetNextProgramOnChannelOperationCompleted(object arg) {
            if ((this.GetNextProgramOnChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextProgramOnChannelCompleted(this, new GetNextProgramOnChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SearchProgramsCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebIntResult SearchProgramsCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchTerm) {
            object[] results = this.Invoke("SearchProgramsCount", new object[] {
                        searchTerm});
            return ((WebIntResult)(results[0]));
        }
        
        /// <remarks/>
        public void SearchProgramsCountAsync(string searchTerm) {
            this.SearchProgramsCountAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchProgramsCountAsync(string searchTerm, object userState) {
            if ((this.SearchProgramsCountOperationCompleted == null)) {
                this.SearchProgramsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchProgramsCountOperationCompleted);
            }
            this.InvokeAsync("SearchProgramsCount", new object[] {
                        searchTerm}, this.SearchProgramsCountOperationCompleted, userState);
        }
        
        private void OnSearchProgramsCountOperationCompleted(object arg) {
            if ((this.SearchProgramsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchProgramsCountCompleted(this, new SearchProgramsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SearchProgramsBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramBasic[] SearchProgramsBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchTerm) {
            object[] results = this.Invoke("SearchProgramsBasic", new object[] {
                        searchTerm});
            return ((WebProgramBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchProgramsBasicAsync(string searchTerm) {
            this.SearchProgramsBasicAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchProgramsBasicAsync(string searchTerm, object userState) {
            if ((this.SearchProgramsBasicOperationCompleted == null)) {
                this.SearchProgramsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchProgramsBasicOperationCompleted);
            }
            this.InvokeAsync("SearchProgramsBasic", new object[] {
                        searchTerm}, this.SearchProgramsBasicOperationCompleted, userState);
        }
        
        private void OnSearchProgramsBasicOperationCompleted(object arg) {
            if ((this.SearchProgramsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchProgramsBasicCompleted(this, new SearchProgramsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SearchProgramsBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramBasic[] SearchProgramsBasicByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchTerm, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified) {
            object[] results = this.Invoke("SearchProgramsBasicByRange", new object[] {
                        searchTerm,
                        start,
                        startSpecified,
                        end,
                        endSpecified});
            return ((WebProgramBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchProgramsBasicByRangeAsync(string searchTerm, int start, bool startSpecified, int end, bool endSpecified) {
            this.SearchProgramsBasicByRangeAsync(searchTerm, start, startSpecified, end, endSpecified, null);
        }
        
        /// <remarks/>
        public void SearchProgramsBasicByRangeAsync(string searchTerm, int start, bool startSpecified, int end, bool endSpecified, object userState) {
            if ((this.SearchProgramsBasicByRangeOperationCompleted == null)) {
                this.SearchProgramsBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchProgramsBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("SearchProgramsBasicByRange", new object[] {
                        searchTerm,
                        start,
                        startSpecified,
                        end,
                        endSpecified}, this.SearchProgramsBasicByRangeOperationCompleted, userState);
        }
        
        private void OnSearchProgramsBasicByRangeOperationCompleted(object arg) {
            if ((this.SearchProgramsBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchProgramsBasicByRangeCompleted(this, new SearchProgramsBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SearchProgramsDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramDetailed[] SearchProgramsDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchTerm) {
            object[] results = this.Invoke("SearchProgramsDetailed", new object[] {
                        searchTerm});
            return ((WebProgramDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchProgramsDetailedAsync(string searchTerm) {
            this.SearchProgramsDetailedAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchProgramsDetailedAsync(string searchTerm, object userState) {
            if ((this.SearchProgramsDetailedOperationCompleted == null)) {
                this.SearchProgramsDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchProgramsDetailedOperationCompleted);
            }
            this.InvokeAsync("SearchProgramsDetailed", new object[] {
                        searchTerm}, this.SearchProgramsDetailedOperationCompleted, userState);
        }
        
        private void OnSearchProgramsDetailedOperationCompleted(object arg) {
            if ((this.SearchProgramsDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchProgramsDetailedCompleted(this, new SearchProgramsDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SearchProgramsDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramDetailed[] SearchProgramsDetailedByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchTerm, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified) {
            object[] results = this.Invoke("SearchProgramsDetailedByRange", new object[] {
                        searchTerm,
                        start,
                        startSpecified,
                        end,
                        endSpecified});
            return ((WebProgramDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchProgramsDetailedByRangeAsync(string searchTerm, int start, bool startSpecified, int end, bool endSpecified) {
            this.SearchProgramsDetailedByRangeAsync(searchTerm, start, startSpecified, end, endSpecified, null);
        }
        
        /// <remarks/>
        public void SearchProgramsDetailedByRangeAsync(string searchTerm, int start, bool startSpecified, int end, bool endSpecified, object userState) {
            if ((this.SearchProgramsDetailedByRangeOperationCompleted == null)) {
                this.SearchProgramsDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchProgramsDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("SearchProgramsDetailedByRange", new object[] {
                        searchTerm,
                        start,
                        startSpecified,
                        end,
                        endSpecified}, this.SearchProgramsDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnSearchProgramsDetailedByRangeOperationCompleted(object arg) {
            if ((this.SearchProgramsDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchProgramsDetailedByRangeCompleted(this, new SearchProgramsDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetNowNextWebProgramBasicForChannel" +
            "", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramBasic[] GetNowNextWebProgramBasicForChannel(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("GetNowNextWebProgramBasicForChannel", new object[] {
                        channelId,
                        channelIdSpecified});
            return ((WebProgramBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNowNextWebProgramBasicForChannelAsync(int channelId, bool channelIdSpecified) {
            this.GetNowNextWebProgramBasicForChannelAsync(channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetNowNextWebProgramBasicForChannelAsync(int channelId, bool channelIdSpecified, object userState) {
            if ((this.GetNowNextWebProgramBasicForChannelOperationCompleted == null)) {
                this.GetNowNextWebProgramBasicForChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNowNextWebProgramBasicForChannelOperationCompleted);
            }
            this.InvokeAsync("GetNowNextWebProgramBasicForChannel", new object[] {
                        channelId,
                        channelIdSpecified}, this.GetNowNextWebProgramBasicForChannelOperationCompleted, userState);
        }
        
        private void OnGetNowNextWebProgramBasicForChannelOperationCompleted(object arg) {
            if ((this.GetNowNextWebProgramBasicForChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNowNextWebProgramBasicForChannelCompleted(this, new GetNowNextWebProgramBasicForChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetNowNextWebProgramDetailedForChan" +
            "nel", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebProgramDetailed[] GetNowNextWebProgramDetailedForChannel(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("GetNowNextWebProgramDetailedForChannel", new object[] {
                        channelId,
                        channelIdSpecified});
            return ((WebProgramDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNowNextWebProgramDetailedForChannelAsync(int channelId, bool channelIdSpecified) {
            this.GetNowNextWebProgramDetailedForChannelAsync(channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetNowNextWebProgramDetailedForChannelAsync(int channelId, bool channelIdSpecified, object userState) {
            if ((this.GetNowNextWebProgramDetailedForChannelOperationCompleted == null)) {
                this.GetNowNextWebProgramDetailedForChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNowNextWebProgramDetailedForChannelOperationCompleted);
            }
            this.InvokeAsync("GetNowNextWebProgramDetailedForChannel", new object[] {
                        channelId,
                        channelIdSpecified}, this.GetNowNextWebProgramDetailedForChannelOperationCompleted, userState);
        }
        
        private void OnGetNowNextWebProgramDetailedForChannelOperationCompleted(object arg) {
            if ((this.GetNowNextWebProgramDetailedForChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNowNextWebProgramDetailedForChannelCompleted(this, new GetNowNextWebProgramDetailedForChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebProgramBasic GetProgramBasicById(int programId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool programIdSpecified) {
            object[] results = this.Invoke("GetProgramBasicById", new object[] {
                        programId,
                        programIdSpecified});
            return ((WebProgramBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramBasicByIdAsync(int programId, bool programIdSpecified) {
            this.GetProgramBasicByIdAsync(programId, programIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramBasicByIdAsync(int programId, bool programIdSpecified, object userState) {
            if ((this.GetProgramBasicByIdOperationCompleted == null)) {
                this.GetProgramBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetProgramBasicById", new object[] {
                        programId,
                        programIdSpecified}, this.GetProgramBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetProgramBasicByIdOperationCompleted(object arg) {
            if ((this.GetProgramBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramBasicByIdCompleted(this, new GetProgramBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebProgramDetailed GetProgramDetailedById(int programId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool programIdSpecified) {
            object[] results = this.Invoke("GetProgramDetailedById", new object[] {
                        programId,
                        programIdSpecified});
            return ((WebProgramDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramDetailedByIdAsync(int programId, bool programIdSpecified) {
            this.GetProgramDetailedByIdAsync(programId, programIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramDetailedByIdAsync(int programId, bool programIdSpecified, object userState) {
            if ((this.GetProgramDetailedByIdOperationCompleted == null)) {
                this.GetProgramDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetProgramDetailedById", new object[] {
                        programId,
                        programIdSpecified}, this.GetProgramDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetProgramDetailedByIdOperationCompleted(object arg) {
            if ((this.GetProgramDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramDetailedByIdCompleted(this, new GetProgramDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramIsScheduledOnChannel", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult GetProgramIsScheduledOnChannel(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified, int programId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool programIdSpecified) {
            object[] results = this.Invoke("GetProgramIsScheduledOnChannel", new object[] {
                        channelId,
                        channelIdSpecified,
                        programId,
                        programIdSpecified});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramIsScheduledOnChannelAsync(int channelId, bool channelIdSpecified, int programId, bool programIdSpecified) {
            this.GetProgramIsScheduledOnChannelAsync(channelId, channelIdSpecified, programId, programIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramIsScheduledOnChannelAsync(int channelId, bool channelIdSpecified, int programId, bool programIdSpecified, object userState) {
            if ((this.GetProgramIsScheduledOnChannelOperationCompleted == null)) {
                this.GetProgramIsScheduledOnChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramIsScheduledOnChannelOperationCompleted);
            }
            this.InvokeAsync("GetProgramIsScheduledOnChannel", new object[] {
                        channelId,
                        channelIdSpecified,
                        programId,
                        programIdSpecified}, this.GetProgramIsScheduledOnChannelOperationCompleted, userState);
        }
        
        private void OnGetProgramIsScheduledOnChannelOperationCompleted(object arg) {
            if ((this.GetProgramIsScheduledOnChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramIsScheduledOnChannelCompleted(this, new GetProgramIsScheduledOnChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetProgramIsScheduled", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult GetProgramIsScheduled(int programId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool programIdSpecified) {
            object[] results = this.Invoke("GetProgramIsScheduled", new object[] {
                        programId,
                        programIdSpecified});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramIsScheduledAsync(int programId, bool programIdSpecified) {
            this.GetProgramIsScheduledAsync(programId, programIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetProgramIsScheduledAsync(int programId, bool programIdSpecified, object userState) {
            if ((this.GetProgramIsScheduledOperationCompleted == null)) {
                this.GetProgramIsScheduledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramIsScheduledOperationCompleted);
            }
            this.InvokeAsync("GetProgramIsScheduled", new object[] {
                        programId,
                        programIdSpecified}, this.GetProgramIsScheduledOperationCompleted, userState);
        }
        
        private void OnGetProgramIsScheduledOperationCompleted(object arg) {
            if ((this.GetProgramIsScheduledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramIsScheduledCompleted(this, new GetProgramIsScheduledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRecordingById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebRecordingBasic GetRecordingById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetRecordingById", new object[] {
                        id,
                        idSpecified});
            return ((WebRecordingBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordingByIdAsync(int id, bool idSpecified) {
            this.GetRecordingByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetRecordingByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetRecordingByIdOperationCompleted == null)) {
                this.GetRecordingByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordingByIdOperationCompleted);
            }
            this.InvokeAsync("GetRecordingById", new object[] {
                        id,
                        idSpecified}, this.GetRecordingByIdOperationCompleted, userState);
        }
        
        private void OnGetRecordingByIdOperationCompleted(object arg) {
            if ((this.GetRecordingByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordingByIdCompleted(this, new GetRecordingByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRecordingFileInfo", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebRecordingFileInfo GetRecordingFileInfo(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetRecordingFileInfo", new object[] {
                        id,
                        idSpecified});
            return ((WebRecordingFileInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordingFileInfoAsync(int id, bool idSpecified) {
            this.GetRecordingFileInfoAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetRecordingFileInfoAsync(int id, bool idSpecified, object userState) {
            if ((this.GetRecordingFileInfoOperationCompleted == null)) {
                this.GetRecordingFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordingFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetRecordingFileInfo", new object[] {
                        id,
                        idSpecified}, this.GetRecordingFileInfoOperationCompleted, userState);
        }
        
        private void OnGetRecordingFileInfoOperationCompleted(object arg) {
            if ((this.GetRecordingFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordingFileInfoCompleted(this, new GetRecordingFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/ReadRecordingFile", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReadRecordingFile(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("ReadRecordingFile", new object[] {
                        id,
                        idSpecified});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadRecordingFileAsync(int id, bool idSpecified) {
            this.ReadRecordingFileAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void ReadRecordingFileAsync(int id, bool idSpecified, object userState) {
            if ((this.ReadRecordingFileOperationCompleted == null)) {
                this.ReadRecordingFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadRecordingFileOperationCompleted);
            }
            this.InvokeAsync("ReadRecordingFile", new object[] {
                        id,
                        idSpecified}, this.ReadRecordingFileOperationCompleted, userState);
        }
        
        private void OnReadRecordingFileOperationCompleted(object arg) {
            if ((this.ReadRecordingFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadRecordingFileCompleted(this, new ReadRecordingFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetGroupCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebIntResult GetGroupCount() {
            object[] results = this.Invoke("GetGroupCount", new object[0]);
            return ((WebIntResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupCountAsync() {
            this.GetGroupCountAsync(null);
        }
        
        /// <remarks/>
        public void GetGroupCountAsync(object userState) {
            if ((this.GetGroupCountOperationCompleted == null)) {
                this.GetGroupCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupCountOperationCompleted);
            }
            this.InvokeAsync("GetGroupCount", new object[0], this.GetGroupCountOperationCompleted, userState);
        }
        
        private void OnGetGroupCountOperationCompleted(object arg) {
            if ((this.GetGroupCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupCountCompleted(this, new GetGroupCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetGroups", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelGroup[] GetGroups([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetGroups", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupsAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetGroupsAsync(sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetGroupsAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetGroupsOperationCompleted == null)) {
                this.GetGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupsOperationCompleted);
            }
            this.InvokeAsync("GetGroups", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetGroupsOperationCompleted, userState);
        }
        
        private void OnGetGroupsOperationCompleted(object arg) {
            if ((this.GetGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupsCompleted(this, new GetGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetGroupsByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelGroup[] GetGroupsByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetGroupsByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupsByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetGroupsByRangeAsync(start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetGroupsByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetGroupsByRangeOperationCompleted == null)) {
                this.GetGroupsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupsByRangeOperationCompleted);
            }
            this.InvokeAsync("GetGroupsByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetGroupsByRangeOperationCompleted, userState);
        }
        
        private void OnGetGroupsByRangeOperationCompleted(object arg) {
            if ((this.GetGroupsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupsByRangeCompleted(this, new GetGroupsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetGroupById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebChannelGroup GetGroupById(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified) {
            object[] results = this.Invoke("GetGroupById", new object[] {
                        groupId,
                        groupIdSpecified});
            return ((WebChannelGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupByIdAsync(int groupId, bool groupIdSpecified) {
            this.GetGroupByIdAsync(groupId, groupIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetGroupByIdAsync(int groupId, bool groupIdSpecified, object userState) {
            if ((this.GetGroupByIdOperationCompleted == null)) {
                this.GetGroupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupByIdOperationCompleted);
            }
            this.InvokeAsync("GetGroupById", new object[] {
                        groupId,
                        groupIdSpecified}, this.GetGroupByIdOperationCompleted, userState);
        }
        
        private void OnGetGroupByIdOperationCompleted(object arg) {
            if ((this.GetGroupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupByIdCompleted(this, new GetGroupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebIntResult GetChannelCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified) {
            object[] results = this.Invoke("GetChannelCount", new object[] {
                        groupId,
                        groupIdSpecified});
            return ((WebIntResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelCountAsync(System.Nullable<int> groupId, bool groupIdSpecified) {
            this.GetChannelCountAsync(groupId, groupIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetChannelCountAsync(System.Nullable<int> groupId, bool groupIdSpecified, object userState) {
            if ((this.GetChannelCountOperationCompleted == null)) {
                this.GetChannelCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelCountOperationCompleted);
            }
            this.InvokeAsync("GetChannelCount", new object[] {
                        groupId,
                        groupIdSpecified}, this.GetChannelCountOperationCompleted, userState);
        }
        
        private void OnGetChannelCountOperationCompleted(object arg) {
            if ((this.GetChannelCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelCountCompleted(this, new GetChannelCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelsBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelBasic[] GetChannelsBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetChannelsBasic", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelsBasicAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetChannelsBasicAsync(groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetChannelsBasicAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetChannelsBasicOperationCompleted == null)) {
                this.GetChannelsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelsBasicOperationCompleted);
            }
            this.InvokeAsync("GetChannelsBasic", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetChannelsBasicOperationCompleted, userState);
        }
        
        private void OnGetChannelsBasicOperationCompleted(object arg) {
            if ((this.GetChannelsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelsBasicCompleted(this, new GetChannelsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelsBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelBasic[] GetChannelsBasicByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetChannelsBasicByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelsBasicByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetChannelsBasicByRangeAsync(start, startSpecified, end, endSpecified, groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetChannelsBasicByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetChannelsBasicByRangeOperationCompleted == null)) {
                this.GetChannelsBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelsBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetChannelsBasicByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetChannelsBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetChannelsBasicByRangeOperationCompleted(object arg) {
            if ((this.GetChannelsBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelsBasicByRangeCompleted(this, new GetChannelsBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelsDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelDetailed[] GetChannelsDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetChannelsDetailed", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelsDetailedAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetChannelsDetailedAsync(groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetChannelsDetailedAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetChannelsDetailedOperationCompleted == null)) {
                this.GetChannelsDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelsDetailedOperationCompleted);
            }
            this.InvokeAsync("GetChannelsDetailed", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetChannelsDetailedOperationCompleted, userState);
        }
        
        private void OnGetChannelsDetailedOperationCompleted(object arg) {
            if ((this.GetChannelsDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelsDetailedCompleted(this, new GetChannelsDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelsDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelDetailed[] GetChannelsDetailedByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetChannelsDetailedByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelsDetailedByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetChannelsDetailedByRangeAsync(start, startSpecified, end, endSpecified, groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetChannelsDetailedByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetChannelsDetailedByRangeOperationCompleted == null)) {
                this.GetChannelsDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelsDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("GetChannelsDetailedByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetChannelsDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnGetChannelsDetailedByRangeOperationCompleted(object arg) {
            if ((this.GetChannelsDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelsDetailedByRangeCompleted(this, new GetChannelsDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetAllChannelStatesForGroup", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelState[] GetAllChannelStatesForGroup(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName) {
            object[] results = this.Invoke("GetAllChannelStatesForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        userName});
            return ((WebChannelState[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllChannelStatesForGroupAsync(int groupId, bool groupIdSpecified, string userName) {
            this.GetAllChannelStatesForGroupAsync(groupId, groupIdSpecified, userName, null);
        }
        
        /// <remarks/>
        public void GetAllChannelStatesForGroupAsync(int groupId, bool groupIdSpecified, string userName, object userState) {
            if ((this.GetAllChannelStatesForGroupOperationCompleted == null)) {
                this.GetAllChannelStatesForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllChannelStatesForGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllChannelStatesForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        userName}, this.GetAllChannelStatesForGroupOperationCompleted, userState);
        }
        
        private void OnGetAllChannelStatesForGroupOperationCompleted(object arg) {
            if ((this.GetAllChannelStatesForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllChannelStatesForGroupCompleted(this, new GetAllChannelStatesForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioGroupCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebIntResult GetRadioGroupCount() {
            object[] results = this.Invoke("GetRadioGroupCount", new object[0]);
            return ((WebIntResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioGroupCountAsync() {
            this.GetRadioGroupCountAsync(null);
        }
        
        /// <remarks/>
        public void GetRadioGroupCountAsync(object userState) {
            if ((this.GetRadioGroupCountOperationCompleted == null)) {
                this.GetRadioGroupCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioGroupCountOperationCompleted);
            }
            this.InvokeAsync("GetRadioGroupCount", new object[0], this.GetRadioGroupCountOperationCompleted, userState);
        }
        
        private void OnGetRadioGroupCountOperationCompleted(object arg) {
            if ((this.GetRadioGroupCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioGroupCountCompleted(this, new GetRadioGroupCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioGroups", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelGroup[] GetRadioGroups([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRadioGroups", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioGroupsAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRadioGroupsAsync(sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioGroupsAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRadioGroupsOperationCompleted == null)) {
                this.GetRadioGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioGroupsOperationCompleted);
            }
            this.InvokeAsync("GetRadioGroups", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRadioGroupsOperationCompleted, userState);
        }
        
        private void OnGetRadioGroupsOperationCompleted(object arg) {
            if ((this.GetRadioGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioGroupsCompleted(this, new GetRadioGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioGroupsByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelGroup[] GetRadioGroupsByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRadioGroupsByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioGroupsByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRadioGroupsByRangeAsync(start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioGroupsByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRadioGroupsByRangeOperationCompleted == null)) {
                this.GetRadioGroupsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioGroupsByRangeOperationCompleted);
            }
            this.InvokeAsync("GetRadioGroupsByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRadioGroupsByRangeOperationCompleted, userState);
        }
        
        private void OnGetRadioGroupsByRangeOperationCompleted(object arg) {
            if ((this.GetRadioGroupsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioGroupsByRangeCompleted(this, new GetRadioGroupsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioGroupById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebChannelGroup GetRadioGroupById(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified) {
            object[] results = this.Invoke("GetRadioGroupById", new object[] {
                        groupId,
                        groupIdSpecified});
            return ((WebChannelGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioGroupByIdAsync(int groupId, bool groupIdSpecified) {
            this.GetRadioGroupByIdAsync(groupId, groupIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioGroupByIdAsync(int groupId, bool groupIdSpecified, object userState) {
            if ((this.GetRadioGroupByIdOperationCompleted == null)) {
                this.GetRadioGroupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioGroupByIdOperationCompleted);
            }
            this.InvokeAsync("GetRadioGroupById", new object[] {
                        groupId,
                        groupIdSpecified}, this.GetRadioGroupByIdOperationCompleted, userState);
        }
        
        private void OnGetRadioGroupByIdOperationCompleted(object arg) {
            if ((this.GetRadioGroupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioGroupByIdCompleted(this, new GetRadioGroupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioChannelCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebIntResult GetRadioChannelCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified) {
            object[] results = this.Invoke("GetRadioChannelCount", new object[] {
                        groupId,
                        groupIdSpecified});
            return ((WebIntResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioChannelCountAsync(System.Nullable<int> groupId, bool groupIdSpecified) {
            this.GetRadioChannelCountAsync(groupId, groupIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioChannelCountAsync(System.Nullable<int> groupId, bool groupIdSpecified, object userState) {
            if ((this.GetRadioChannelCountOperationCompleted == null)) {
                this.GetRadioChannelCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioChannelCountOperationCompleted);
            }
            this.InvokeAsync("GetRadioChannelCount", new object[] {
                        groupId,
                        groupIdSpecified}, this.GetRadioChannelCountOperationCompleted, userState);
        }
        
        private void OnGetRadioChannelCountOperationCompleted(object arg) {
            if ((this.GetRadioChannelCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioChannelCountCompleted(this, new GetRadioChannelCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioChannelsBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelBasic[] GetRadioChannelsBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRadioChannelsBasic", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioChannelsBasicAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRadioChannelsBasicAsync(groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioChannelsBasicAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRadioChannelsBasicOperationCompleted == null)) {
                this.GetRadioChannelsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioChannelsBasicOperationCompleted);
            }
            this.InvokeAsync("GetRadioChannelsBasic", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRadioChannelsBasicOperationCompleted, userState);
        }
        
        private void OnGetRadioChannelsBasicOperationCompleted(object arg) {
            if ((this.GetRadioChannelsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioChannelsBasicCompleted(this, new GetRadioChannelsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioChannelsBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelBasic[] GetRadioChannelsBasicByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRadioChannelsBasicByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioChannelsBasicByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRadioChannelsBasicByRangeAsync(start, startSpecified, end, endSpecified, groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioChannelsBasicByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRadioChannelsBasicByRangeOperationCompleted == null)) {
                this.GetRadioChannelsBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioChannelsBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetRadioChannelsBasicByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRadioChannelsBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetRadioChannelsBasicByRangeOperationCompleted(object arg) {
            if ((this.GetRadioChannelsBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioChannelsBasicByRangeCompleted(this, new GetRadioChannelsBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioChannelsDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelDetailed[] GetRadioChannelsDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRadioChannelsDetailed", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioChannelsDetailedAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRadioChannelsDetailedAsync(groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioChannelsDetailedAsync(System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRadioChannelsDetailedOperationCompleted == null)) {
                this.GetRadioChannelsDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioChannelsDetailedOperationCompleted);
            }
            this.InvokeAsync("GetRadioChannelsDetailed", new object[] {
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRadioChannelsDetailedOperationCompleted, userState);
        }
        
        private void OnGetRadioChannelsDetailedOperationCompleted(object arg) {
            if ((this.GetRadioChannelsDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioChannelsDetailedCompleted(this, new GetRadioChannelsDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRadioChannelsDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelDetailed[] GetRadioChannelsDetailedByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> groupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRadioChannelsDetailedByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebChannelDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRadioChannelsDetailedByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRadioChannelsDetailedByRangeAsync(start, startSpecified, end, endSpecified, groupId, groupIdSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRadioChannelsDetailedByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<int> groupId, bool groupIdSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRadioChannelsDetailedByRangeOperationCompleted == null)) {
                this.GetRadioChannelsDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadioChannelsDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("GetRadioChannelsDetailedByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        groupId,
                        groupIdSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRadioChannelsDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnGetRadioChannelsDetailedByRangeOperationCompleted(object arg) {
            if ((this.GetRadioChannelsDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadioChannelsDetailedByRangeCompleted(this, new GetRadioChannelsDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetAllRadioChannelStatesForGroup", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebChannelState[] GetAllRadioChannelStatesForGroup(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName) {
            object[] results = this.Invoke("GetAllRadioChannelStatesForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        userName});
            return ((WebChannelState[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRadioChannelStatesForGroupAsync(int groupId, bool groupIdSpecified, string userName) {
            this.GetAllRadioChannelStatesForGroupAsync(groupId, groupIdSpecified, userName, null);
        }
        
        /// <remarks/>
        public void GetAllRadioChannelStatesForGroupAsync(int groupId, bool groupIdSpecified, string userName, object userState) {
            if ((this.GetAllRadioChannelStatesForGroupOperationCompleted == null)) {
                this.GetAllRadioChannelStatesForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRadioChannelStatesForGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllRadioChannelStatesForGroup", new object[] {
                        groupId,
                        groupIdSpecified,
                        userName}, this.GetAllRadioChannelStatesForGroupOperationCompleted, userState);
        }
        
        private void OnGetAllRadioChannelStatesForGroupOperationCompleted(object arg) {
            if ((this.GetAllRadioChannelStatesForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRadioChannelStatesForGroupCompleted(this, new GetAllRadioChannelStatesForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebChannelBasic GetChannelBasicById(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("GetChannelBasicById", new object[] {
                        channelId,
                        channelIdSpecified});
            return ((WebChannelBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelBasicByIdAsync(int channelId, bool channelIdSpecified) {
            this.GetChannelBasicByIdAsync(channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetChannelBasicByIdAsync(int channelId, bool channelIdSpecified, object userState) {
            if ((this.GetChannelBasicByIdOperationCompleted == null)) {
                this.GetChannelBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetChannelBasicById", new object[] {
                        channelId,
                        channelIdSpecified}, this.GetChannelBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetChannelBasicByIdOperationCompleted(object arg) {
            if ((this.GetChannelBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelBasicByIdCompleted(this, new GetChannelBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebChannelDetailed GetChannelDetailedById(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("GetChannelDetailedById", new object[] {
                        channelId,
                        channelIdSpecified});
            return ((WebChannelDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelDetailedByIdAsync(int channelId, bool channelIdSpecified) {
            this.GetChannelDetailedByIdAsync(channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetChannelDetailedByIdAsync(int channelId, bool channelIdSpecified, object userState) {
            if ((this.GetChannelDetailedByIdOperationCompleted == null)) {
                this.GetChannelDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetChannelDetailedById", new object[] {
                        channelId,
                        channelIdSpecified}, this.GetChannelDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetChannelDetailedByIdOperationCompleted(object arg) {
            if ((this.GetChannelDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelDetailedByIdCompleted(this, new GetChannelDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetChannelState", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebChannelState GetChannelState(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName) {
            object[] results = this.Invoke("GetChannelState", new object[] {
                        channelId,
                        channelIdSpecified,
                        userName});
            return ((WebChannelState)(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelStateAsync(int channelId, bool channelIdSpecified, string userName) {
            this.GetChannelStateAsync(channelId, channelIdSpecified, userName, null);
        }
        
        /// <remarks/>
        public void GetChannelStateAsync(int channelId, bool channelIdSpecified, string userName, object userState) {
            if ((this.GetChannelStateOperationCompleted == null)) {
                this.GetChannelStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelStateOperationCompleted);
            }
            this.InvokeAsync("GetChannelState", new object[] {
                        channelId,
                        channelIdSpecified,
                        userName}, this.GetChannelStateOperationCompleted, userState);
        }
        
        private void OnGetChannelStateOperationCompleted(object arg) {
            if ((this.GetChannelStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelStateCompleted(this, new GetChannelStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SwitchTVServerToChannelAndGetVirtua" +
            "lCard", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebVirtualCard SwitchTVServerToChannelAndGetVirtualCard([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("SwitchTVServerToChannelAndGetVirtualCard", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified});
            return ((WebVirtualCard)(results[0]));
        }
        
        /// <remarks/>
        public void SwitchTVServerToChannelAndGetVirtualCardAsync(string userName, int channelId, bool channelIdSpecified) {
            this.SwitchTVServerToChannelAndGetVirtualCardAsync(userName, channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void SwitchTVServerToChannelAndGetVirtualCardAsync(string userName, int channelId, bool channelIdSpecified, object userState) {
            if ((this.SwitchTVServerToChannelAndGetVirtualCardOperationCompleted == null)) {
                this.SwitchTVServerToChannelAndGetVirtualCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwitchTVServerToChannelAndGetVirtualCardOperationCompleted);
            }
            this.InvokeAsync("SwitchTVServerToChannelAndGetVirtualCard", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified}, this.SwitchTVServerToChannelAndGetVirtualCardOperationCompleted, userState);
        }
        
        private void OnSwitchTVServerToChannelAndGetVirtualCardOperationCompleted(object arg) {
            if ((this.SwitchTVServerToChannelAndGetVirtualCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwitchTVServerToChannelAndGetVirtualCardCompleted(this, new SwitchTVServerToChannelAndGetVirtualCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SwitchTVServerToChannelAndGetStream" +
            "ingUrl", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebStringResult SwitchTVServerToChannelAndGetStreamingUrl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified) {
            object[] results = this.Invoke("SwitchTVServerToChannelAndGetStreamingUrl", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified});
            return ((WebStringResult)(results[0]));
        }
        
        /// <remarks/>
        public void SwitchTVServerToChannelAndGetStreamingUrlAsync(string userName, int channelId, bool channelIdSpecified) {
            this.SwitchTVServerToChannelAndGetStreamingUrlAsync(userName, channelId, channelIdSpecified, null);
        }
        
        /// <remarks/>
        public void SwitchTVServerToChannelAndGetStreamingUrlAsync(string userName, int channelId, bool channelIdSpecified, object userState) {
            if ((this.SwitchTVServerToChannelAndGetStreamingUrlOperationCompleted == null)) {
                this.SwitchTVServerToChannelAndGetStreamingUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwitchTVServerToChannelAndGetStreamingUrlOperationCompleted);
            }
            this.InvokeAsync("SwitchTVServerToChannelAndGetStreamingUrl", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified}, this.SwitchTVServerToChannelAndGetStreamingUrlOperationCompleted, userState);
        }
        
        private void OnSwitchTVServerToChannelAndGetStreamingUrlOperationCompleted(object arg) {
            if ((this.SwitchTVServerToChannelAndGetStreamingUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwitchTVServerToChannelAndGetStreamingUrlCompleted(this, new SwitchTVServerToChannelAndGetStreamingUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetServiceDescription", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTVServiceDescription GetServiceDescription() {
            object[] results = this.Invoke("GetServiceDescription", new object[0]);
            return ((WebTVServiceDescription)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceDescriptionAsync() {
            this.GetServiceDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceDescriptionAsync(object userState) {
            if ((this.GetServiceDescriptionOperationCompleted == null)) {
                this.GetServiceDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetServiceDescription", new object[0], this.GetServiceDescriptionOperationCompleted, userState);
        }
        
        private void OnGetServiceDescriptionOperationCompleted(object arg) {
            if ((this.GetServiceDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceDescriptionCompleted(this, new GetServiceDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/TestConnectionToTVService", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult TestConnectionToTVService() {
            object[] results = this.Invoke("TestConnectionToTVService", new object[0]);
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionToTVServiceAsync() {
            this.TestConnectionToTVServiceAsync(null);
        }
        
        /// <remarks/>
        public void TestConnectionToTVServiceAsync(object userState) {
            if ((this.TestConnectionToTVServiceOperationCompleted == null)) {
                this.TestConnectionToTVServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionToTVServiceOperationCompleted);
            }
            this.InvokeAsync("TestConnectionToTVService", new object[0], this.TestConnectionToTVServiceOperationCompleted, userState);
        }
        
        private void OnTestConnectionToTVServiceOperationCompleted(object arg) {
            if ((this.TestConnectionToTVServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionToTVServiceCompleted(this, new TestConnectionToTVServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/ReadSettingFromDatabase", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebStringResult ReadSettingFromDatabase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tagName) {
            object[] results = this.Invoke("ReadSettingFromDatabase", new object[] {
                        tagName});
            return ((WebStringResult)(results[0]));
        }
        
        /// <remarks/>
        public void ReadSettingFromDatabaseAsync(string tagName) {
            this.ReadSettingFromDatabaseAsync(tagName, null);
        }
        
        /// <remarks/>
        public void ReadSettingFromDatabaseAsync(string tagName, object userState) {
            if ((this.ReadSettingFromDatabaseOperationCompleted == null)) {
                this.ReadSettingFromDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadSettingFromDatabaseOperationCompleted);
            }
            this.InvokeAsync("ReadSettingFromDatabase", new object[] {
                        tagName}, this.ReadSettingFromDatabaseOperationCompleted, userState);
        }
        
        private void OnReadSettingFromDatabaseOperationCompleted(object arg) {
            if ((this.ReadSettingFromDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadSettingFromDatabaseCompleted(this, new ReadSettingFromDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/WriteSettingToDatabase", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult WriteSettingToDatabase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tagName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string value) {
            object[] results = this.Invoke("WriteSettingToDatabase", new object[] {
                        tagName,
                        value});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void WriteSettingToDatabaseAsync(string tagName, string value) {
            this.WriteSettingToDatabaseAsync(tagName, value, null);
        }
        
        /// <remarks/>
        public void WriteSettingToDatabaseAsync(string tagName, string value, object userState) {
            if ((this.WriteSettingToDatabaseOperationCompleted == null)) {
                this.WriteSettingToDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteSettingToDatabaseOperationCompleted);
            }
            this.InvokeAsync("WriteSettingToDatabase", new object[] {
                        tagName,
                        value}, this.WriteSettingToDatabaseOperationCompleted, userState);
        }
        
        private void OnWriteSettingToDatabaseOperationCompleted(object arg) {
            if ((this.WriteSettingToDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteSettingToDatabaseCompleted(this, new WriteSettingToDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetLocalDiskInformation", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
        public WebDiskSpaceInformation[] GetLocalDiskInformation() {
            object[] results = this.Invoke("GetLocalDiskInformation", new object[0]);
            return ((WebDiskSpaceInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocalDiskInformationAsync() {
            this.GetLocalDiskInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetLocalDiskInformationAsync(object userState) {
            if ((this.GetLocalDiskInformationOperationCompleted == null)) {
                this.GetLocalDiskInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocalDiskInformationOperationCompleted);
            }
            this.InvokeAsync("GetLocalDiskInformation", new object[0], this.GetLocalDiskInformationOperationCompleted, userState);
        }
        
        private void OnGetLocalDiskInformationOperationCompleted(object arg) {
            if ((this.GetLocalDiskInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocalDiskInformationCompleted(this, new GetLocalDiskInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/Search", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebTVSearchResult[] Search([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebTVSearchResultType> type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified) {
            object[] results = this.Invoke("Search", new object[] {
                        text,
                        type,
                        typeSpecified});
            return ((WebTVSearchResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string text, System.Nullable<WebTVSearchResultType> type, bool typeSpecified) {
            this.SearchAsync(text, type, typeSpecified, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string text, System.Nullable<WebTVSearchResultType> type, bool typeSpecified, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        text,
                        type,
                        typeSpecified}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetExternalMediaInfo", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebDictionaryOfstring GetExternalMediaInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebMediaType> type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetExternalMediaInfo", new object[] {
                        type,
                        typeSpecified,
                        id});
            return ((WebDictionaryOfstring)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalMediaInfoAsync(System.Nullable<WebMediaType> type, bool typeSpecified, string id) {
            this.GetExternalMediaInfoAsync(type, typeSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetExternalMediaInfoAsync(System.Nullable<WebMediaType> type, bool typeSpecified, string id, object userState) {
            if ((this.GetExternalMediaInfoOperationCompleted == null)) {
                this.GetExternalMediaInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalMediaInfoOperationCompleted);
            }
            this.InvokeAsync("GetExternalMediaInfo", new object[] {
                        type,
                        typeSpecified,
                        id}, this.GetExternalMediaInfoOperationCompleted, userState);
        }
        
        private void OnGetExternalMediaInfoOperationCompleted(object arg) {
            if ((this.GetExternalMediaInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalMediaInfoCompleted(this, new GetExternalMediaInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/SearchResultsByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebTVSearchResult[] SearchResultsByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebTVSearchResultType> type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified) {
            object[] results = this.Invoke("SearchResultsByRange", new object[] {
                        text,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        type,
                        typeSpecified});
            return ((WebTVSearchResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchResultsByRangeAsync(string text, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebTVSearchResultType> type, bool typeSpecified) {
            this.SearchResultsByRangeAsync(text, start, startSpecified, end, endSpecified, type, typeSpecified, null);
        }
        
        /// <remarks/>
        public void SearchResultsByRangeAsync(string text, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebTVSearchResultType> type, bool typeSpecified, object userState) {
            if ((this.SearchResultsByRangeOperationCompleted == null)) {
                this.SearchResultsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchResultsByRangeOperationCompleted);
            }
            this.InvokeAsync("SearchResultsByRange", new object[] {
                        text,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        type,
                        typeSpecified}, this.SearchResultsByRangeOperationCompleted, userState);
        }
        
        private void OnSearchResultsByRangeOperationCompleted(object arg) {
            if ((this.SearchResultsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchResultsByRangeCompleted(this, new SearchResultsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetCards", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebCard[] GetCards() {
            object[] results = this.Invoke("GetCards", new object[0]);
            return ((WebCard[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCardsAsync() {
            this.GetCardsAsync(null);
        }
        
        /// <remarks/>
        public void GetCardsAsync(object userState) {
            if ((this.GetCardsOperationCompleted == null)) {
                this.GetCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardsOperationCompleted);
            }
            this.InvokeAsync("GetCards", new object[0], this.GetCardsOperationCompleted, userState);
        }
        
        private void OnGetCardsOperationCompleted(object arg) {
            if ((this.GetCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardsCompleted(this, new GetCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetActiveCards", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebVirtualCard[] GetActiveCards() {
            object[] results = this.Invoke("GetActiveCards", new object[0]);
            return ((WebVirtualCard[])(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveCardsAsync() {
            this.GetActiveCardsAsync(null);
        }
        
        /// <remarks/>
        public void GetActiveCardsAsync(object userState) {
            if ((this.GetActiveCardsOperationCompleted == null)) {
                this.GetActiveCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveCardsOperationCompleted);
            }
            this.InvokeAsync("GetActiveCards", new object[0], this.GetActiveCardsOperationCompleted, userState);
        }
        
        private void OnGetActiveCardsOperationCompleted(object arg) {
            if ((this.GetActiveCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveCardsCompleted(this, new GetActiveCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetActiveUsers", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebUser[] GetActiveUsers() {
            object[] results = this.Invoke("GetActiveUsers", new object[0]);
            return ((WebUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveUsersAsync() {
            this.GetActiveUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetActiveUsersAsync(object userState) {
            if ((this.GetActiveUsersOperationCompleted == null)) {
                this.GetActiveUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveUsersOperationCompleted);
            }
            this.InvokeAsync("GetActiveUsers", new object[0], this.GetActiveUsersOperationCompleted, userState);
        }
        
        private void OnGetActiveUsersOperationCompleted(object arg) {
            if ((this.GetActiveUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveUsersCompleted(this, new GetActiveUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetStreamingClients", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebRtspClient[] GetStreamingClients() {
            object[] results = this.Invoke("GetStreamingClients", new object[0]);
            return ((WebRtspClient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStreamingClientsAsync() {
            this.GetStreamingClientsAsync(null);
        }
        
        /// <remarks/>
        public void GetStreamingClientsAsync(object userState) {
            if ((this.GetStreamingClientsOperationCompleted == null)) {
                this.GetStreamingClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStreamingClientsOperationCompleted);
            }
            this.InvokeAsync("GetStreamingClients", new object[0], this.GetStreamingClientsOperationCompleted, userState);
        }
        
        private void OnGetStreamingClientsOperationCompleted(object arg) {
            if ((this.GetStreamingClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStreamingClientsCompleted(this, new GetStreamingClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetAllRecordingDiskInformation", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
        public WebDiskSpaceInformation[] GetAllRecordingDiskInformation() {
            object[] results = this.Invoke("GetAllRecordingDiskInformation", new object[0]);
            return ((WebDiskSpaceInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRecordingDiskInformationAsync() {
            this.GetAllRecordingDiskInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRecordingDiskInformationAsync(object userState) {
            if ((this.GetAllRecordingDiskInformationOperationCompleted == null)) {
                this.GetAllRecordingDiskInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRecordingDiskInformationOperationCompleted);
            }
            this.InvokeAsync("GetAllRecordingDiskInformation", new object[0], this.GetAllRecordingDiskInformationOperationCompleted, userState);
        }
        
        private void OnGetAllRecordingDiskInformationOperationCompleted(object arg) {
            if ((this.GetAllRecordingDiskInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRecordingDiskInformationCompleted(this, new GetAllRecordingDiskInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRecordingDiskInformationForCard", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebDiskSpaceInformation GetRecordingDiskInformationForCard(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetRecordingDiskInformationForCard", new object[] {
                        id,
                        idSpecified});
            return ((WebDiskSpaceInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordingDiskInformationForCardAsync(int id, bool idSpecified) {
            this.GetRecordingDiskInformationForCardAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetRecordingDiskInformationForCardAsync(int id, bool idSpecified, object userState) {
            if ((this.GetRecordingDiskInformationForCardOperationCompleted == null)) {
                this.GetRecordingDiskInformationForCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordingDiskInformationForCardOperationCompleted);
            }
            this.InvokeAsync("GetRecordingDiskInformationForCard", new object[] {
                        id,
                        idSpecified}, this.GetRecordingDiskInformationForCardOperationCompleted, userState);
        }
        
        private void OnGetRecordingDiskInformationForCardOperationCompleted(object arg) {
            if ((this.GetRecordingDiskInformationForCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordingDiskInformationForCardCompleted(this, new GetRecordingDiskInformationForCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/StartRecordingManual", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult StartRecordingManual([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string title) {
            object[] results = this.Invoke("StartRecordingManual", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified,
                        title});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void StartRecordingManualAsync(string userName, int channelId, bool channelIdSpecified, string title) {
            this.StartRecordingManualAsync(userName, channelId, channelIdSpecified, title, null);
        }
        
        /// <remarks/>
        public void StartRecordingManualAsync(string userName, int channelId, bool channelIdSpecified, string title, object userState) {
            if ((this.StartRecordingManualOperationCompleted == null)) {
                this.StartRecordingManualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRecordingManualOperationCompleted);
            }
            this.InvokeAsync("StartRecordingManual", new object[] {
                        userName,
                        channelId,
                        channelIdSpecified,
                        title}, this.StartRecordingManualOperationCompleted, userState);
        }
        
        private void OnStartRecordingManualOperationCompleted(object arg) {
            if ((this.StartRecordingManualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRecordingManualCompleted(this, new StartRecordingManualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/AddSchedule", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult AddSchedule(int channelId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string title, System.DateTime startTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, System.DateTime endTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified, WebScheduleType scheduleType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool scheduleTypeSpecified) {
            object[] results = this.Invoke("AddSchedule", new object[] {
                        channelId,
                        channelIdSpecified,
                        title,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified,
                        scheduleType,
                        scheduleTypeSpecified});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleAsync(int channelId, bool channelIdSpecified, string title, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, WebScheduleType scheduleType, bool scheduleTypeSpecified) {
            this.AddScheduleAsync(channelId, channelIdSpecified, title, startTime, startTimeSpecified, endTime, endTimeSpecified, scheduleType, scheduleTypeSpecified, null);
        }
        
        /// <remarks/>
        public void AddScheduleAsync(int channelId, bool channelIdSpecified, string title, System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, WebScheduleType scheduleType, bool scheduleTypeSpecified, object userState) {
            if ((this.AddScheduleOperationCompleted == null)) {
                this.AddScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleOperationCompleted);
            }
            this.InvokeAsync("AddSchedule", new object[] {
                        channelId,
                        channelIdSpecified,
                        title,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified,
                        scheduleType,
                        scheduleTypeSpecified}, this.AddScheduleOperationCompleted, userState);
        }
        
        private void OnAddScheduleOperationCompleted(object arg) {
            if ((this.AddScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleCompleted(this, new AddScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/AddScheduleDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult AddScheduleDetailed(
                    int channelId, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool channelIdSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string title, 
                    System.DateTime startTime, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, 
                    System.DateTime endTime, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified, 
                    WebScheduleType scheduleType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool scheduleTypeSpecified, 
                    int preRecordInterval, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool preRecordIntervalSpecified, 
                    int postRecordInterval, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool postRecordIntervalSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string directory, 
                    int priority, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool prioritySpecified) {
            object[] results = this.Invoke("AddScheduleDetailed", new object[] {
                        channelId,
                        channelIdSpecified,
                        title,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified,
                        scheduleType,
                        scheduleTypeSpecified,
                        preRecordInterval,
                        preRecordIntervalSpecified,
                        postRecordInterval,
                        postRecordIntervalSpecified,
                        directory,
                        priority,
                        prioritySpecified});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleDetailedAsync(
                    int channelId, 
                    bool channelIdSpecified, 
                    string title, 
                    System.DateTime startTime, 
                    bool startTimeSpecified, 
                    System.DateTime endTime, 
                    bool endTimeSpecified, 
                    WebScheduleType scheduleType, 
                    bool scheduleTypeSpecified, 
                    int preRecordInterval, 
                    bool preRecordIntervalSpecified, 
                    int postRecordInterval, 
                    bool postRecordIntervalSpecified, 
                    string directory, 
                    int priority, 
                    bool prioritySpecified) {
            this.AddScheduleDetailedAsync(channelId, channelIdSpecified, title, startTime, startTimeSpecified, endTime, endTimeSpecified, scheduleType, scheduleTypeSpecified, preRecordInterval, preRecordIntervalSpecified, postRecordInterval, postRecordIntervalSpecified, directory, priority, prioritySpecified, null);
        }
        
        /// <remarks/>
        public void AddScheduleDetailedAsync(
                    int channelId, 
                    bool channelIdSpecified, 
                    string title, 
                    System.DateTime startTime, 
                    bool startTimeSpecified, 
                    System.DateTime endTime, 
                    bool endTimeSpecified, 
                    WebScheduleType scheduleType, 
                    bool scheduleTypeSpecified, 
                    int preRecordInterval, 
                    bool preRecordIntervalSpecified, 
                    int postRecordInterval, 
                    bool postRecordIntervalSpecified, 
                    string directory, 
                    int priority, 
                    bool prioritySpecified, 
                    object userState) {
            if ((this.AddScheduleDetailedOperationCompleted == null)) {
                this.AddScheduleDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleDetailedOperationCompleted);
            }
            this.InvokeAsync("AddScheduleDetailed", new object[] {
                        channelId,
                        channelIdSpecified,
                        title,
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified,
                        scheduleType,
                        scheduleTypeSpecified,
                        preRecordInterval,
                        preRecordIntervalSpecified,
                        postRecordInterval,
                        postRecordIntervalSpecified,
                        directory,
                        priority,
                        prioritySpecified}, this.AddScheduleDetailedOperationCompleted, userState);
        }
        
        private void OnAddScheduleDetailedOperationCompleted(object arg) {
            if ((this.AddScheduleDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleDetailedCompleted(this, new AddScheduleDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetScheduleCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebIntResult GetScheduleCount() {
            object[] results = this.Invoke("GetScheduleCount", new object[0]);
            return ((WebIntResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleCountAsync() {
            this.GetScheduleCountAsync(null);
        }
        
        /// <remarks/>
        public void GetScheduleCountAsync(object userState) {
            if ((this.GetScheduleCountOperationCompleted == null)) {
                this.GetScheduleCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleCountOperationCompleted);
            }
            this.InvokeAsync("GetScheduleCount", new object[0], this.GetScheduleCountOperationCompleted, userState);
        }
        
        private void OnGetScheduleCountOperationCompleted(object arg) {
            if ((this.GetScheduleCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleCountCompleted(this, new GetScheduleCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetSchedules", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebScheduleBasic[] GetSchedules([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetSchedules", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebScheduleBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetSchedulesAsync(sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetSchedulesOperationCompleted == null)) {
                this.GetSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetSchedules", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetSchedulesOperationCompleted, userState);
        }
        
        private void OnGetSchedulesOperationCompleted(object arg) {
            if ((this.GetSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesCompleted(this, new GetSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetSchedulesByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebScheduleBasic[] GetSchedulesByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetSchedulesByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebScheduleBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetSchedulesByRangeAsync(start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetSchedulesByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetSchedulesByRangeOperationCompleted == null)) {
                this.GetSchedulesByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesByRangeOperationCompleted);
            }
            this.InvokeAsync("GetSchedulesByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetSchedulesByRangeOperationCompleted, userState);
        }
        
        private void OnGetSchedulesByRangeOperationCompleted(object arg) {
            if ((this.GetSchedulesByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesByRangeCompleted(this, new GetSchedulesByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetScheduleById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebScheduleBasic GetScheduleById(int scheduleId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool scheduleIdSpecified) {
            object[] results = this.Invoke("GetScheduleById", new object[] {
                        scheduleId,
                        scheduleIdSpecified});
            return ((WebScheduleBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByIdAsync(int scheduleId, bool scheduleIdSpecified) {
            this.GetScheduleByIdAsync(scheduleId, scheduleIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetScheduleByIdAsync(int scheduleId, bool scheduleIdSpecified, object userState) {
            if ((this.GetScheduleByIdOperationCompleted == null)) {
                this.GetScheduleByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByIdOperationCompleted);
            }
            this.InvokeAsync("GetScheduleById", new object[] {
                        scheduleId,
                        scheduleIdSpecified}, this.GetScheduleByIdOperationCompleted, userState);
        }
        
        private void OnGetScheduleByIdOperationCompleted(object arg) {
            if ((this.GetScheduleByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByIdCompleted(this, new GetScheduleByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/CancelSchedule", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult CancelSchedule(int programId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool programIdSpecified) {
            object[] results = this.Invoke("CancelSchedule", new object[] {
                        programId,
                        programIdSpecified});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void CancelScheduleAsync(int programId, bool programIdSpecified) {
            this.CancelScheduleAsync(programId, programIdSpecified, null);
        }
        
        /// <remarks/>
        public void CancelScheduleAsync(int programId, bool programIdSpecified, object userState) {
            if ((this.CancelScheduleOperationCompleted == null)) {
                this.CancelScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelScheduleOperationCompleted);
            }
            this.InvokeAsync("CancelSchedule", new object[] {
                        programId,
                        programIdSpecified}, this.CancelScheduleOperationCompleted, userState);
        }
        
        private void OnCancelScheduleOperationCompleted(object arg) {
            if ((this.CancelScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelScheduleCompleted(this, new CancelScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/DeleteSchedule", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebBoolResult DeleteSchedule(int scheduleId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool scheduleIdSpecified) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        scheduleId,
                        scheduleIdSpecified});
            return ((WebBoolResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int scheduleId, bool scheduleIdSpecified) {
            this.DeleteScheduleAsync(scheduleId, scheduleIdSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int scheduleId, bool scheduleIdSpecified, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        scheduleId,
                        scheduleIdSpecified}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetScheduledRecordingsForDate", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebScheduledRecording[] GetScheduledRecordingsForDate(System.DateTime date, [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetScheduledRecordingsForDate", new object[] {
                        date,
                        dateSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebScheduledRecording[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduledRecordingsForDateAsync(System.DateTime date, bool dateSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetScheduledRecordingsForDateAsync(date, dateSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetScheduledRecordingsForDateAsync(System.DateTime date, bool dateSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetScheduledRecordingsForDateOperationCompleted == null)) {
                this.GetScheduledRecordingsForDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduledRecordingsForDateOperationCompleted);
            }
            this.InvokeAsync("GetScheduledRecordingsForDate", new object[] {
                        date,
                        dateSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetScheduledRecordingsForDateOperationCompleted, userState);
        }
        
        private void OnGetScheduledRecordingsForDateOperationCompleted(object arg) {
            if ((this.GetScheduledRecordingsForDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduledRecordingsForDateCompleted(this, new GetScheduledRecordingsForDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetScheduledRecordingsForToday", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebScheduledRecording[] GetScheduledRecordingsForToday([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetScheduledRecordingsForToday", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebScheduledRecording[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduledRecordingsForTodayAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetScheduledRecordingsForTodayAsync(sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetScheduledRecordingsForTodayAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetScheduledRecordingsForTodayOperationCompleted == null)) {
                this.GetScheduledRecordingsForTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduledRecordingsForTodayOperationCompleted);
            }
            this.InvokeAsync("GetScheduledRecordingsForToday", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetScheduledRecordingsForTodayOperationCompleted, userState);
        }
        
        private void OnGetScheduledRecordingsForTodayOperationCompleted(object arg) {
            if ((this.GetScheduledRecordingsForTodayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduledRecordingsForTodayCompleted(this, new GetScheduledRecordingsForTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRecordingCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebIntResult GetRecordingCount() {
            object[] results = this.Invoke("GetRecordingCount", new object[0]);
            return ((WebIntResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordingCountAsync() {
            this.GetRecordingCountAsync(null);
        }
        
        /// <remarks/>
        public void GetRecordingCountAsync(object userState) {
            if ((this.GetRecordingCountOperationCompleted == null)) {
                this.GetRecordingCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordingCountOperationCompleted);
            }
            this.InvokeAsync("GetRecordingCount", new object[0], this.GetRecordingCountOperationCompleted, userState);
        }
        
        private void OnGetRecordingCountOperationCompleted(object arg) {
            if ((this.GetRecordingCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordingCountCompleted(this, new GetRecordingCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRecordings", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebRecordingBasic[] GetRecordings([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRecordings", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebRecordingBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordingsAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRecordingsAsync(sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRecordingsAsync(System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRecordingsOperationCompleted == null)) {
                this.GetRecordingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordingsOperationCompleted);
            }
            this.InvokeAsync("GetRecordings", new object[] {
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRecordingsOperationCompleted, userState);
        }
        
        private void OnGetRecordingsOperationCompleted(object arg) {
            if ((this.GetRecordingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordingsCompleted(this, new GetRecordingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/ITVAccessService/GetRecordingsByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
            "faces")]
        public WebRecordingBasic[] GetRecordingsByRange(int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortField> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<WebSortOrder> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetRecordingsByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebRecordingBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordingsByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified) {
            this.GetRecordingsByRangeAsync(start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetRecordingsByRangeAsync(int start, bool startSpecified, int end, bool endSpecified, System.Nullable<WebSortField> sort, bool sortSpecified, System.Nullable<WebSortOrder> order, bool orderSpecified, object userState) {
            if ((this.GetRecordingsByRangeOperationCompleted == null)) {
                this.GetRecordingsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordingsByRangeOperationCompleted);
            }
            this.InvokeAsync("GetRecordingsByRange", new object[] {
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetRecordingsByRangeOperationCompleted, userState);
        }
        
        private void OnGetRecordingsByRangeOperationCompleted(object arg) {
            if ((this.GetRecordingsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordingsByRangeCompleted(this, new GetRecordingsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public partial class WebStringResult {
        
        private string resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebScheduledRecording {
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private string channelNameField;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private int programIdField;
        
        private bool programIdFieldSpecified;
        
        private int scheduleIdField;
        
        private bool scheduleIdFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProgramId {
            get {
                return this.programIdField;
            }
            set {
                this.programIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProgramIdSpecified {
            get {
                return this.programIdFieldSpecified;
            }
            set {
                this.programIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ScheduleId {
            get {
                return this.scheduleIdField;
            }
            set {
                this.scheduleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScheduleIdSpecified {
            get {
                return this.scheduleIdFieldSpecified;
            }
            set {
                this.scheduleIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebScheduleBasic {
        
        private int bitRateModeField;
        
        private bool bitRateModeFieldSpecified;
        
        private System.DateTime canceledField;
        
        private bool canceledFieldSpecified;
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private string directoryField;
        
        private bool doesUseEpisodeManagementField;
        
        private bool doesUseEpisodeManagementFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isChangedField;
        
        private bool isChangedFieldSpecified;
        
        private bool isManualField;
        
        private bool isManualFieldSpecified;
        
        private System.DateTime keepDateField;
        
        private bool keepDateFieldSpecified;
        
        private WebScheduleKeepMethod keepMethodField;
        
        private bool keepMethodFieldSpecified;
        
        private int maxAiringsField;
        
        private bool maxAiringsFieldSpecified;
        
        private int parentScheduleIdField;
        
        private bool parentScheduleIdFieldSpecified;
        
        private int postRecordIntervalField;
        
        private bool postRecordIntervalFieldSpecified;
        
        private int preRecordIntervalField;
        
        private bool preRecordIntervalFieldSpecified;
        
        private int priorityField;
        
        private bool priorityFieldSpecified;
        
        private int qualityField;
        
        private bool qualityFieldSpecified;
        
        private int qualityTypeField;
        
        private bool qualityTypeFieldSpecified;
        
        private int recommendedCardField;
        
        private bool recommendedCardFieldSpecified;
        
        private WebScheduleType scheduleTypeField;
        
        private bool scheduleTypeFieldSpecified;
        
        private bool seriesField;
        
        private bool seriesFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        public int BitRateMode {
            get {
                return this.bitRateModeField;
            }
            set {
                this.bitRateModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitRateModeSpecified {
            get {
                return this.bitRateModeFieldSpecified;
            }
            set {
                this.bitRateModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Canceled {
            get {
                return this.canceledField;
            }
            set {
                this.canceledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CanceledSpecified {
            get {
                return this.canceledFieldSpecified;
            }
            set {
                this.canceledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Directory {
            get {
                return this.directoryField;
            }
            set {
                this.directoryField = value;
            }
        }
        
        /// <remarks/>
        public bool DoesUseEpisodeManagement {
            get {
                return this.doesUseEpisodeManagementField;
            }
            set {
                this.doesUseEpisodeManagementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DoesUseEpisodeManagementSpecified {
            get {
                return this.doesUseEpisodeManagementFieldSpecified;
            }
            set {
                this.doesUseEpisodeManagementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsChanged {
            get {
                return this.isChangedField;
            }
            set {
                this.isChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsChangedSpecified {
            get {
                return this.isChangedFieldSpecified;
            }
            set {
                this.isChangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsManual {
            get {
                return this.isManualField;
            }
            set {
                this.isManualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsManualSpecified {
            get {
                return this.isManualFieldSpecified;
            }
            set {
                this.isManualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime KeepDate {
            get {
                return this.keepDateField;
            }
            set {
                this.keepDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepDateSpecified {
            get {
                return this.keepDateFieldSpecified;
            }
            set {
                this.keepDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WebScheduleKeepMethod KeepMethod {
            get {
                return this.keepMethodField;
            }
            set {
                this.keepMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepMethodSpecified {
            get {
                return this.keepMethodFieldSpecified;
            }
            set {
                this.keepMethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxAirings {
            get {
                return this.maxAiringsField;
            }
            set {
                this.maxAiringsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxAiringsSpecified {
            get {
                return this.maxAiringsFieldSpecified;
            }
            set {
                this.maxAiringsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ParentScheduleId {
            get {
                return this.parentScheduleIdField;
            }
            set {
                this.parentScheduleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentScheduleIdSpecified {
            get {
                return this.parentScheduleIdFieldSpecified;
            }
            set {
                this.parentScheduleIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PostRecordInterval {
            get {
                return this.postRecordIntervalField;
            }
            set {
                this.postRecordIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PostRecordIntervalSpecified {
            get {
                return this.postRecordIntervalFieldSpecified;
            }
            set {
                this.postRecordIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PreRecordInterval {
            get {
                return this.preRecordIntervalField;
            }
            set {
                this.preRecordIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreRecordIntervalSpecified {
            get {
                return this.preRecordIntervalFieldSpecified;
            }
            set {
                this.preRecordIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QualityType {
            get {
                return this.qualityTypeField;
            }
            set {
                this.qualityTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QualityTypeSpecified {
            get {
                return this.qualityTypeFieldSpecified;
            }
            set {
                this.qualityTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int RecommendedCard {
            get {
                return this.recommendedCardField;
            }
            set {
                this.recommendedCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecommendedCardSpecified {
            get {
                return this.recommendedCardFieldSpecified;
            }
            set {
                this.recommendedCardFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WebScheduleType ScheduleType {
            get {
                return this.scheduleTypeField;
            }
            set {
                this.scheduleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScheduleTypeSpecified {
            get {
                return this.scheduleTypeFieldSpecified;
            }
            set {
                this.scheduleTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Series {
            get {
                return this.seriesField;
            }
            set {
                this.seriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeriesSpecified {
            get {
                return this.seriesFieldSpecified;
            }
            set {
                this.seriesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public enum WebScheduleKeepMethod {
        
        /// <remarks/>
        UntilSpaceNeeded,
        
        /// <remarks/>
        UntilWatched,
        
        /// <remarks/>
        TillDate,
        
        /// <remarks/>
        Always,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public enum WebScheduleType {
        
        /// <remarks/>
        Once,
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        EveryTimeOnThisChannel,
        
        /// <remarks/>
        EveryTimeOnEveryChannel,
        
        /// <remarks/>
        Weekends,
        
        /// <remarks/>
        WorkingDays,
        
        /// <remarks/>
        WeeklyEveryTimeOnThisChannel,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebRtspClient {
        
        private System.DateTime dateTimeStartedField;
        
        private bool dateTimeStartedFieldSpecified;
        
        private string descriptionField;
        
        private string ipAdressField;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private string streamNameField;
        
        /// <remarks/>
        public System.DateTime DateTimeStarted {
            get {
                return this.dateTimeStartedField;
            }
            set {
                this.dateTimeStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateTimeStartedSpecified {
            get {
                return this.dateTimeStartedFieldSpecified;
            }
            set {
                this.dateTimeStartedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IpAdress {
            get {
                return this.ipAdressField;
            }
            set {
                this.ipAdressField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StreamName {
            get {
                return this.streamNameField;
            }
            set {
                this.streamNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebCard {
        
        private bool cAMField;
        
        private bool cAMFieldSpecified;
        
        private int camTypeField;
        
        private bool camTypeFieldSpecified;
        
        private int decryptLimitField;
        
        private bool decryptLimitFieldSpecified;
        
        private string devicePathField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private bool grabEPGField;
        
        private bool grabEPGFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isChangedField;
        
        private bool isChangedFieldSpecified;
        
        private System.DateTime lastEpgGrabField;
        
        private bool lastEpgGrabFieldSpecified;
        
        private string nameField;
        
        private int netProviderField;
        
        private bool netProviderFieldSpecified;
        
        private bool preloadCardField;
        
        private bool preloadCardFieldSpecified;
        
        private int priorityField;
        
        private bool priorityFieldSpecified;
        
        private string recordingFolderField;
        
        private int recordingFormatField;
        
        private bool recordingFormatFieldSpecified;
        
        private bool supportSubChannelsField;
        
        private bool supportSubChannelsFieldSpecified;
        
        private string timeShiftFolderField;
        
        /// <remarks/>
        public bool CAM {
            get {
                return this.cAMField;
            }
            set {
                this.cAMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CAMSpecified {
            get {
                return this.cAMFieldSpecified;
            }
            set {
                this.cAMFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CamType {
            get {
                return this.camTypeField;
            }
            set {
                this.camTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CamTypeSpecified {
            get {
                return this.camTypeFieldSpecified;
            }
            set {
                this.camTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DecryptLimit {
            get {
                return this.decryptLimitField;
            }
            set {
                this.decryptLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecryptLimitSpecified {
            get {
                return this.decryptLimitFieldSpecified;
            }
            set {
                this.decryptLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DevicePath {
            get {
                return this.devicePathField;
            }
            set {
                this.devicePathField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool GrabEPG {
            get {
                return this.grabEPGField;
            }
            set {
                this.grabEPGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrabEPGSpecified {
            get {
                return this.grabEPGFieldSpecified;
            }
            set {
                this.grabEPGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsChanged {
            get {
                return this.isChangedField;
            }
            set {
                this.isChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsChangedSpecified {
            get {
                return this.isChangedFieldSpecified;
            }
            set {
                this.isChangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastEpgGrab {
            get {
                return this.lastEpgGrabField;
            }
            set {
                this.lastEpgGrabField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastEpgGrabSpecified {
            get {
                return this.lastEpgGrabFieldSpecified;
            }
            set {
                this.lastEpgGrabFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int NetProvider {
            get {
                return this.netProviderField;
            }
            set {
                this.netProviderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetProviderSpecified {
            get {
                return this.netProviderFieldSpecified;
            }
            set {
                this.netProviderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool PreloadCard {
            get {
                return this.preloadCardField;
            }
            set {
                this.preloadCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreloadCardSpecified {
            get {
                return this.preloadCardFieldSpecified;
            }
            set {
                this.preloadCardFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RecordingFolder {
            get {
                return this.recordingFolderField;
            }
            set {
                this.recordingFolderField = value;
            }
        }
        
        /// <remarks/>
        public int RecordingFormat {
            get {
                return this.recordingFormatField;
            }
            set {
                this.recordingFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordingFormatSpecified {
            get {
                return this.recordingFormatFieldSpecified;
            }
            set {
                this.recordingFormatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SupportSubChannels {
            get {
                return this.supportSubChannelsField;
            }
            set {
                this.supportSubChannelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportSubChannelsSpecified {
            get {
                return this.supportSubChannelsFieldSpecified;
            }
            set {
                this.supportSubChannelsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TimeShiftFolder {
            get {
                return this.timeShiftFolderField;
            }
            set {
                this.timeShiftFolderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public partial class WebDictionaryOfstring {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlQualifiedName factoryTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        public System.Xml.XmlQualifiedName FactoryType {
            get {
                return this.factoryTypeField;
            }
            set {
                this.factoryTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebTVSearchResult {
        
        private string channelNameField;
        
        private System.Nullable<System.DateTime> endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private string idField;
        
        private int scoreField;
        
        private bool scoreFieldSpecified;
        
        private System.Nullable<System.DateTime> startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private string titleField;
        
        private WebTVSearchResultType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScoreSpecified {
            get {
                return this.scoreFieldSpecified;
            }
            set {
                this.scoreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public WebTVSearchResultType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public enum WebTVSearchResultType {
        
        /// <remarks/>
        TVChannel,
        
        /// <remarks/>
        RadioChannel,
        
        /// <remarks/>
        Schedule,
        
        /// <remarks/>
        Recording,
        
        /// <remarks/>
        TVGroup,
        
        /// <remarks/>
        RadioGroup,
        
        /// <remarks/>
        Program,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public partial class WebDiskSpaceInformation {
        
        private float availableField;
        
        private bool availableFieldSpecified;
        
        private string diskField;
        
        private float percentageUsedField;
        
        private bool percentageUsedFieldSpecified;
        
        private float sizeField;
        
        private bool sizeFieldSpecified;
        
        private float usedField;
        
        private bool usedFieldSpecified;
        
        /// <remarks/>
        public float Available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvailableSpecified {
            get {
                return this.availableFieldSpecified;
            }
            set {
                this.availableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Disk {
            get {
                return this.diskField;
            }
            set {
                this.diskField = value;
            }
        }
        
        /// <remarks/>
        public float PercentageUsed {
            get {
                return this.percentageUsedField;
            }
            set {
                this.percentageUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentageUsedSpecified {
            get {
                return this.percentageUsedFieldSpecified;
            }
            set {
                this.percentageUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Used {
            get {
                return this.usedField;
            }
            set {
                this.usedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedSpecified {
            get {
                return this.usedFieldSpecified;
            }
            set {
                this.usedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebTVServiceDescription {
        
        private int apiVersionField;
        
        private bool apiVersionFieldSpecified;
        
        private bool hasConnectionToTVServerField;
        
        private bool hasConnectionToTVServerFieldSpecified;
        
        private string serviceVersionField;
        
        /// <remarks/>
        public int ApiVersion {
            get {
                return this.apiVersionField;
            }
            set {
                this.apiVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApiVersionSpecified {
            get {
                return this.apiVersionFieldSpecified;
            }
            set {
                this.apiVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool HasConnectionToTVServer {
            get {
                return this.hasConnectionToTVServerField;
            }
            set {
                this.hasConnectionToTVServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasConnectionToTVServerSpecified {
            get {
                return this.hasConnectionToTVServerFieldSpecified;
            }
            set {
                this.hasConnectionToTVServerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServiceVersion {
            get {
                return this.serviceVersionField;
            }
            set {
                this.serviceVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebUser {
        
        private int cardIdField;
        
        private bool cardIdFieldSpecified;
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private System.DateTime heartBeatField;
        
        private bool heartBeatFieldSpecified;
        
        private bool isAdminField;
        
        private bool isAdminFieldSpecified;
        
        private string nameField;
        
        private int subChannelField;
        
        private bool subChannelFieldSpecified;
        
        private int tvStoppedReasonField;
        
        private bool tvStoppedReasonFieldSpecified;
        
        /// <remarks/>
        public int CardId {
            get {
                return this.cardIdField;
            }
            set {
                this.cardIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CardIdSpecified {
            get {
                return this.cardIdFieldSpecified;
            }
            set {
                this.cardIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime HeartBeat {
            get {
                return this.heartBeatField;
            }
            set {
                this.heartBeatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeartBeatSpecified {
            get {
                return this.heartBeatFieldSpecified;
            }
            set {
                this.heartBeatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAdminSpecified {
            get {
                return this.isAdminFieldSpecified;
            }
            set {
                this.isAdminFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int SubChannel {
            get {
                return this.subChannelField;
            }
            set {
                this.subChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubChannelSpecified {
            get {
                return this.subChannelFieldSpecified;
            }
            set {
                this.subChannelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TvStoppedReason {
            get {
                return this.tvStoppedReasonField;
            }
            set {
                this.tvStoppedReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TvStoppedReasonSpecified {
            get {
                return this.tvStoppedReasonFieldSpecified;
            }
            set {
                this.tvStoppedReasonFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebVirtualCard {
        
        private int bitRateModeField;
        
        private bool bitRateModeFieldSpecified;
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private string channelNameField;
        
        private string deviceField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private int getTimeshiftStoppedReasonField;
        
        private bool getTimeshiftStoppedReasonFieldSpecified;
        
        private bool grabTeletextField;
        
        private bool grabTeletextFieldSpecified;
        
        private bool hasTeletextField;
        
        private bool hasTeletextFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isGrabbingEpgField;
        
        private bool isGrabbingEpgFieldSpecified;
        
        private bool isRecordingField;
        
        private bool isRecordingFieldSpecified;
        
        private bool isScanningField;
        
        private bool isScanningFieldSpecified;
        
        private bool isScrambledField;
        
        private bool isScrambledFieldSpecified;
        
        private bool isTimeShiftingField;
        
        private bool isTimeShiftingFieldSpecified;
        
        private bool isTunerLockedField;
        
        private bool isTunerLockedFieldSpecified;
        
        private int maxChannelField;
        
        private bool maxChannelFieldSpecified;
        
        private int minChannelField;
        
        private bool minChannelFieldSpecified;
        
        private string nameField;
        
        private int qualityTypeField;
        
        private bool qualityTypeFieldSpecified;
        
        private string rTSPUrlField;
        
        private string recordingFileNameField;
        
        private string recordingFolderField;
        
        private int recordingFormatField;
        
        private bool recordingFormatFieldSpecified;
        
        private int recordingScheduleIdField;
        
        private bool recordingScheduleIdFieldSpecified;
        
        private System.DateTime recordingStartedField;
        
        private bool recordingStartedFieldSpecified;
        
        private string remoteServerField;
        
        private int signalLevelField;
        
        private bool signalLevelFieldSpecified;
        
        private int signalQualityField;
        
        private bool signalQualityFieldSpecified;
        
        private string timeShiftFileNameField;
        
        private string timeShiftFolderField;
        
        private System.DateTime timeShiftStartedField;
        
        private bool timeShiftStartedFieldSpecified;
        
        private WebCardType typeField;
        
        private bool typeFieldSpecified;
        
        private WebUser userField;
        
        /// <remarks/>
        public int BitRateMode {
            get {
                return this.bitRateModeField;
            }
            set {
                this.bitRateModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitRateModeSpecified {
            get {
                return this.bitRateModeFieldSpecified;
            }
            set {
                this.bitRateModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int GetTimeshiftStoppedReason {
            get {
                return this.getTimeshiftStoppedReasonField;
            }
            set {
                this.getTimeshiftStoppedReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GetTimeshiftStoppedReasonSpecified {
            get {
                return this.getTimeshiftStoppedReasonFieldSpecified;
            }
            set {
                this.getTimeshiftStoppedReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool GrabTeletext {
            get {
                return this.grabTeletextField;
            }
            set {
                this.grabTeletextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrabTeletextSpecified {
            get {
                return this.grabTeletextFieldSpecified;
            }
            set {
                this.grabTeletextFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool HasTeletext {
            get {
                return this.hasTeletextField;
            }
            set {
                this.hasTeletextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasTeletextSpecified {
            get {
                return this.hasTeletextFieldSpecified;
            }
            set {
                this.hasTeletextFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsGrabbingEpg {
            get {
                return this.isGrabbingEpgField;
            }
            set {
                this.isGrabbingEpgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsGrabbingEpgSpecified {
            get {
                return this.isGrabbingEpgFieldSpecified;
            }
            set {
                this.isGrabbingEpgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecording {
            get {
                return this.isRecordingField;
            }
            set {
                this.isRecordingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingSpecified {
            get {
                return this.isRecordingFieldSpecified;
            }
            set {
                this.isRecordingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsScanning {
            get {
                return this.isScanningField;
            }
            set {
                this.isScanningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsScanningSpecified {
            get {
                return this.isScanningFieldSpecified;
            }
            set {
                this.isScanningFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsScrambled {
            get {
                return this.isScrambledField;
            }
            set {
                this.isScrambledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsScrambledSpecified {
            get {
                return this.isScrambledFieldSpecified;
            }
            set {
                this.isScrambledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsTimeShifting {
            get {
                return this.isTimeShiftingField;
            }
            set {
                this.isTimeShiftingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTimeShiftingSpecified {
            get {
                return this.isTimeShiftingFieldSpecified;
            }
            set {
                this.isTimeShiftingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsTunerLocked {
            get {
                return this.isTunerLockedField;
            }
            set {
                this.isTunerLockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTunerLockedSpecified {
            get {
                return this.isTunerLockedFieldSpecified;
            }
            set {
                this.isTunerLockedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxChannel {
            get {
                return this.maxChannelField;
            }
            set {
                this.maxChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxChannelSpecified {
            get {
                return this.maxChannelFieldSpecified;
            }
            set {
                this.maxChannelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MinChannel {
            get {
                return this.minChannelField;
            }
            set {
                this.minChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinChannelSpecified {
            get {
                return this.minChannelFieldSpecified;
            }
            set {
                this.minChannelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int QualityType {
            get {
                return this.qualityTypeField;
            }
            set {
                this.qualityTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QualityTypeSpecified {
            get {
                return this.qualityTypeFieldSpecified;
            }
            set {
                this.qualityTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RTSPUrl {
            get {
                return this.rTSPUrlField;
            }
            set {
                this.rTSPUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RecordingFileName {
            get {
                return this.recordingFileNameField;
            }
            set {
                this.recordingFileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RecordingFolder {
            get {
                return this.recordingFolderField;
            }
            set {
                this.recordingFolderField = value;
            }
        }
        
        /// <remarks/>
        public int RecordingFormat {
            get {
                return this.recordingFormatField;
            }
            set {
                this.recordingFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordingFormatSpecified {
            get {
                return this.recordingFormatFieldSpecified;
            }
            set {
                this.recordingFormatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int RecordingScheduleId {
            get {
                return this.recordingScheduleIdField;
            }
            set {
                this.recordingScheduleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordingScheduleIdSpecified {
            get {
                return this.recordingScheduleIdFieldSpecified;
            }
            set {
                this.recordingScheduleIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RecordingStarted {
            get {
                return this.recordingStartedField;
            }
            set {
                this.recordingStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordingStartedSpecified {
            get {
                return this.recordingStartedFieldSpecified;
            }
            set {
                this.recordingStartedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RemoteServer {
            get {
                return this.remoteServerField;
            }
            set {
                this.remoteServerField = value;
            }
        }
        
        /// <remarks/>
        public int SignalLevel {
            get {
                return this.signalLevelField;
            }
            set {
                this.signalLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalLevelSpecified {
            get {
                return this.signalLevelFieldSpecified;
            }
            set {
                this.signalLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SignalQuality {
            get {
                return this.signalQualityField;
            }
            set {
                this.signalQualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalQualitySpecified {
            get {
                return this.signalQualityFieldSpecified;
            }
            set {
                this.signalQualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TimeShiftFileName {
            get {
                return this.timeShiftFileNameField;
            }
            set {
                this.timeShiftFileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TimeShiftFolder {
            get {
                return this.timeShiftFolderField;
            }
            set {
                this.timeShiftFolderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeShiftStarted {
            get {
                return this.timeShiftStartedField;
            }
            set {
                this.timeShiftStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeShiftStartedSpecified {
            get {
                return this.timeShiftStartedFieldSpecified;
            }
            set {
                this.timeShiftStartedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WebCardType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebUser User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public enum WebCardType {
        
        /// <remarks/>
        Analog,
        
        /// <remarks/>
        DvbS,
        
        /// <remarks/>
        DvbT,
        
        /// <remarks/>
        DvbC,
        
        /// <remarks/>
        Atsc,
        
        /// <remarks/>
        RadioWebStream,
        
        /// <remarks/>
        DvbIP,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebChannelState {
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private ChannelState stateField;
        
        private bool stateFieldSpecified;
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ChannelState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public enum ChannelState {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        NotTunable,
        
        /// <remarks/>
        Tunable,
        
        /// <remarks/>
        Timeshifting,
        
        /// <remarks/>
        Recording,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebChannelDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebChannelBasic {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isRadioField;
        
        private bool isRadioFieldSpecified;
        
        private bool isTvField;
        
        private bool isTvFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRadio {
            get {
                return this.isRadioField;
            }
            set {
                this.isRadioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRadioSpecified {
            get {
                return this.isRadioFieldSpecified;
            }
            set {
                this.isRadioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsTv {
            get {
                return this.isTvField;
            }
            set {
                this.isTvField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTvSpecified {
            get {
                return this.isTvFieldSpecified;
            }
            set {
                this.isTvFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebChannelDetailed : WebChannelBasic {
        
        private WebProgramDetailed currentProgramField;
        
        private bool epgHasGapsField;
        
        private bool epgHasGapsFieldSpecified;
        
        private string externalIdField;
        
        private int freeToAirField;
        
        private bool freeToAirFieldSpecified;
        
        private bool grabEpgField;
        
        private bool grabEpgFieldSpecified;
        
        private string[] groupNamesField;
        
        private bool isChangedField;
        
        private bool isChangedFieldSpecified;
        
        private System.DateTime lastGrabTimeField;
        
        private bool lastGrabTimeFieldSpecified;
        
        private WebProgramDetailed nextProgramField;
        
        private int timesWatchedField;
        
        private bool timesWatchedFieldSpecified;
        
        private System.DateTime totalTimeWatchedField;
        
        private bool totalTimeWatchedFieldSpecified;
        
        private bool visibleInGuideField;
        
        private bool visibleInGuideFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebProgramDetailed CurrentProgram {
            get {
                return this.currentProgramField;
            }
            set {
                this.currentProgramField = value;
            }
        }
        
        /// <remarks/>
        public bool EpgHasGaps {
            get {
                return this.epgHasGapsField;
            }
            set {
                this.epgHasGapsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EpgHasGapsSpecified {
            get {
                return this.epgHasGapsFieldSpecified;
            }
            set {
                this.epgHasGapsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public int FreeToAir {
            get {
                return this.freeToAirField;
            }
            set {
                this.freeToAirField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeToAirSpecified {
            get {
                return this.freeToAirFieldSpecified;
            }
            set {
                this.freeToAirFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool GrabEpg {
            get {
                return this.grabEpgField;
            }
            set {
                this.grabEpgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrabEpgSpecified {
            get {
                return this.grabEpgFieldSpecified;
            }
            set {
                this.grabEpgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GroupNames {
            get {
                return this.groupNamesField;
            }
            set {
                this.groupNamesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsChanged {
            get {
                return this.isChangedField;
            }
            set {
                this.isChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsChangedSpecified {
            get {
                return this.isChangedFieldSpecified;
            }
            set {
                this.isChangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastGrabTime {
            get {
                return this.lastGrabTimeField;
            }
            set {
                this.lastGrabTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastGrabTimeSpecified {
            get {
                return this.lastGrabTimeFieldSpecified;
            }
            set {
                this.lastGrabTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebProgramDetailed NextProgram {
            get {
                return this.nextProgramField;
            }
            set {
                this.nextProgramField = value;
            }
        }
        
        /// <remarks/>
        public int TimesWatched {
            get {
                return this.timesWatchedField;
            }
            set {
                this.timesWatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimesWatchedSpecified {
            get {
                return this.timesWatchedFieldSpecified;
            }
            set {
                this.timesWatchedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TotalTimeWatched {
            get {
                return this.totalTimeWatchedField;
            }
            set {
                this.totalTimeWatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTimeWatchedSpecified {
            get {
                return this.totalTimeWatchedFieldSpecified;
            }
            set {
                this.totalTimeWatchedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool VisibleInGuide {
            get {
                return this.visibleInGuideField;
            }
            set {
                this.visibleInGuideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleInGuideSpecified {
            get {
                return this.visibleInGuideFieldSpecified;
            }
            set {
                this.visibleInGuideFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebProgramDetailed : WebProgramBasic {
        
        private string classificationField;
        
        private string episodeNameField;
        
        private string episodeNumField;
        
        private string episodeNumberField;
        
        private string episodePartField;
        
        private string genreField;
        
        private bool hasConflictField;
        
        private bool hasConflictFieldSpecified;
        
        private bool isChangedField;
        
        private bool isChangedFieldSpecified;
        
        private bool isPartialRecordingSeriesPendingField;
        
        private bool isPartialRecordingSeriesPendingFieldSpecified;
        
        private bool isRecordingField;
        
        private bool isRecordingFieldSpecified;
        
        private bool isRecordingManualField;
        
        private bool isRecordingManualFieldSpecified;
        
        private bool isRecordingOnceField;
        
        private bool isRecordingOnceFieldSpecified;
        
        private bool isRecordingOncePendingField;
        
        private bool isRecordingOncePendingFieldSpecified;
        
        private bool isRecordingSeriesField;
        
        private bool isRecordingSeriesFieldSpecified;
        
        private bool isRecordingSeriesPendingField;
        
        private bool isRecordingSeriesPendingFieldSpecified;
        
        private bool notifyField;
        
        private bool notifyFieldSpecified;
        
        private System.DateTime originalAirDateField;
        
        private bool originalAirDateFieldSpecified;
        
        private int parentalRatingField;
        
        private bool parentalRatingFieldSpecified;
        
        private string seriesNumField;
        
        private int starRatingField;
        
        private bool starRatingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Classification {
            get {
                return this.classificationField;
            }
            set {
                this.classificationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodeName {
            get {
                return this.episodeNameField;
            }
            set {
                this.episodeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodeNum {
            get {
                return this.episodeNumField;
            }
            set {
                this.episodeNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodePart {
            get {
                return this.episodePartField;
            }
            set {
                this.episodePartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Genre {
            get {
                return this.genreField;
            }
            set {
                this.genreField = value;
            }
        }
        
        /// <remarks/>
        public bool HasConflict {
            get {
                return this.hasConflictField;
            }
            set {
                this.hasConflictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasConflictSpecified {
            get {
                return this.hasConflictFieldSpecified;
            }
            set {
                this.hasConflictFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsChanged {
            get {
                return this.isChangedField;
            }
            set {
                this.isChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsChangedSpecified {
            get {
                return this.isChangedFieldSpecified;
            }
            set {
                this.isChangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsPartialRecordingSeriesPending {
            get {
                return this.isPartialRecordingSeriesPendingField;
            }
            set {
                this.isPartialRecordingSeriesPendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPartialRecordingSeriesPendingSpecified {
            get {
                return this.isPartialRecordingSeriesPendingFieldSpecified;
            }
            set {
                this.isPartialRecordingSeriesPendingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecording {
            get {
                return this.isRecordingField;
            }
            set {
                this.isRecordingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingSpecified {
            get {
                return this.isRecordingFieldSpecified;
            }
            set {
                this.isRecordingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecordingManual {
            get {
                return this.isRecordingManualField;
            }
            set {
                this.isRecordingManualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingManualSpecified {
            get {
                return this.isRecordingManualFieldSpecified;
            }
            set {
                this.isRecordingManualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecordingOnce {
            get {
                return this.isRecordingOnceField;
            }
            set {
                this.isRecordingOnceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingOnceSpecified {
            get {
                return this.isRecordingOnceFieldSpecified;
            }
            set {
                this.isRecordingOnceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecordingOncePending {
            get {
                return this.isRecordingOncePendingField;
            }
            set {
                this.isRecordingOncePendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingOncePendingSpecified {
            get {
                return this.isRecordingOncePendingFieldSpecified;
            }
            set {
                this.isRecordingOncePendingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecordingSeries {
            get {
                return this.isRecordingSeriesField;
            }
            set {
                this.isRecordingSeriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingSeriesSpecified {
            get {
                return this.isRecordingSeriesFieldSpecified;
            }
            set {
                this.isRecordingSeriesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecordingSeriesPending {
            get {
                return this.isRecordingSeriesPendingField;
            }
            set {
                this.isRecordingSeriesPendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingSeriesPendingSpecified {
            get {
                return this.isRecordingSeriesPendingFieldSpecified;
            }
            set {
                this.isRecordingSeriesPendingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Notify {
            get {
                return this.notifyField;
            }
            set {
                this.notifyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotifySpecified {
            get {
                return this.notifyFieldSpecified;
            }
            set {
                this.notifyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OriginalAirDate {
            get {
                return this.originalAirDateField;
            }
            set {
                this.originalAirDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OriginalAirDateSpecified {
            get {
                return this.originalAirDateFieldSpecified;
            }
            set {
                this.originalAirDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ParentalRating {
            get {
                return this.parentalRatingField;
            }
            set {
                this.parentalRatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentalRatingSpecified {
            get {
                return this.parentalRatingFieldSpecified;
            }
            set {
                this.parentalRatingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SeriesNum {
            get {
                return this.seriesNumField;
            }
            set {
                this.seriesNumField = value;
            }
        }
        
        /// <remarks/>
        public int StarRating {
            get {
                return this.starRatingField;
            }
            set {
                this.starRatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StarRatingSpecified {
            get {
                return this.starRatingFieldSpecified;
            }
            set {
                this.starRatingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebProgramDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebProgramBasic {
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private string descriptionField;
        
        private int durationInMinutesField;
        
        private bool durationInMinutesFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isScheduledField;
        
        private bool isScheduledFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int DurationInMinutes {
            get {
                return this.durationInMinutesField;
            }
            set {
                this.durationInMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationInMinutesSpecified {
            get {
                return this.durationInMinutesFieldSpecified;
            }
            set {
                this.durationInMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsScheduled {
            get {
                return this.isScheduledField;
            }
            set {
                this.isScheduledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsScheduledSpecified {
            get {
                return this.isScheduledFieldSpecified;
            }
            set {
                this.isScheduledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebChannelGroup {
        
        private string groupNameField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isChangedField;
        
        private bool isChangedFieldSpecified;
        
        private bool isRadioField;
        
        private bool isRadioFieldSpecified;
        
        private bool isTvField;
        
        private bool isTvFieldSpecified;
        
        private int sortOrderField;
        
        private bool sortOrderFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsChanged {
            get {
                return this.isChangedField;
            }
            set {
                this.isChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsChangedSpecified {
            get {
                return this.isChangedFieldSpecified;
            }
            set {
                this.isChangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRadio {
            get {
                return this.isRadioField;
            }
            set {
                this.isRadioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRadioSpecified {
            get {
                return this.isRadioFieldSpecified;
            }
            set {
                this.isRadioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsTv {
            get {
                return this.isTvField;
            }
            set {
                this.isTvField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTvSpecified {
            get {
                return this.isTvFieldSpecified;
            }
            set {
                this.isTvFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortOrderSpecified {
            get {
                return this.sortOrderFieldSpecified;
            }
            set {
                this.sortOrderFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebRecordingFileInfo {
        
        private bool existsField;
        
        private bool existsFieldSpecified;
        
        private string extensionField;
        
        private bool isLocalFileField;
        
        private bool isLocalFileFieldSpecified;
        
        private bool isReadOnlyField;
        
        private bool isReadOnlyFieldSpecified;
        
        private System.DateTime lastAccessTimeField;
        
        private bool lastAccessTimeFieldSpecified;
        
        private System.DateTime lastModifiedTimeField;
        
        private bool lastModifiedTimeFieldSpecified;
        
        private string nameField;
        
        private bool onNetworkDriveField;
        
        private bool onNetworkDriveFieldSpecified;
        
        private string pathField;
        
        private long sizeField;
        
        private bool sizeFieldSpecified;
        
        /// <remarks/>
        public bool Exists {
            get {
                return this.existsField;
            }
            set {
                this.existsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExistsSpecified {
            get {
                return this.existsFieldSpecified;
            }
            set {
                this.existsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocalFile {
            get {
                return this.isLocalFileField;
            }
            set {
                this.isLocalFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsLocalFileSpecified {
            get {
                return this.isLocalFileFieldSpecified;
            }
            set {
                this.isLocalFileFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsReadOnly {
            get {
                return this.isReadOnlyField;
            }
            set {
                this.isReadOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsReadOnlySpecified {
            get {
                return this.isReadOnlyFieldSpecified;
            }
            set {
                this.isReadOnlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastAccessTime {
            get {
                return this.lastAccessTimeField;
            }
            set {
                this.lastAccessTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastAccessTimeSpecified {
            get {
                return this.lastAccessTimeFieldSpecified;
            }
            set {
                this.lastAccessTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifiedTime {
            get {
                return this.lastModifiedTimeField;
            }
            set {
                this.lastModifiedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastModifiedTimeSpecified {
            get {
                return this.lastModifiedTimeFieldSpecified;
            }
            set {
                this.lastModifiedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool OnNetworkDrive {
            get {
                return this.onNetworkDriveField;
            }
            set {
                this.onNetworkDriveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnNetworkDriveSpecified {
            get {
                return this.onNetworkDriveFieldSpecified;
            }
            set {
                this.onNetworkDriveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebRecordingBasic {
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private string channelNameField;
        
        private string descriptionField;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private string episodeNameField;
        
        private string episodeNumField;
        
        private string episodeNumberField;
        
        private string episodePartField;
        
        private string fileNameField;
        
        private string genreField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isChangedField;
        
        private bool isChangedFieldSpecified;
        
        private bool isManualField;
        
        private bool isManualFieldSpecified;
        
        private bool isRecordingField;
        
        private bool isRecordingFieldSpecified;
        
        private int keepUntilField;
        
        private bool keepUntilFieldSpecified;
        
        private System.DateTime keepUntilDateField;
        
        private bool keepUntilDateFieldSpecified;
        
        private int scheduleIdField;
        
        private bool scheduleIdFieldSpecified;
        
        private string seriesNumField;
        
        private bool shouldBeDeletedField;
        
        private bool shouldBeDeletedFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private int stopTimeField;
        
        private bool stopTimeFieldSpecified;
        
        private int timesWatchedField;
        
        private bool timesWatchedFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodeName {
            get {
                return this.episodeNameField;
            }
            set {
                this.episodeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodeNum {
            get {
                return this.episodeNumField;
            }
            set {
                this.episodeNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EpisodePart {
            get {
                return this.episodePartField;
            }
            set {
                this.episodePartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Genre {
            get {
                return this.genreField;
            }
            set {
                this.genreField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsChanged {
            get {
                return this.isChangedField;
            }
            set {
                this.isChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsChangedSpecified {
            get {
                return this.isChangedFieldSpecified;
            }
            set {
                this.isChangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsManual {
            get {
                return this.isManualField;
            }
            set {
                this.isManualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsManualSpecified {
            get {
                return this.isManualFieldSpecified;
            }
            set {
                this.isManualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecording {
            get {
                return this.isRecordingField;
            }
            set {
                this.isRecordingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRecordingSpecified {
            get {
                return this.isRecordingFieldSpecified;
            }
            set {
                this.isRecordingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int KeepUntil {
            get {
                return this.keepUntilField;
            }
            set {
                this.keepUntilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepUntilSpecified {
            get {
                return this.keepUntilFieldSpecified;
            }
            set {
                this.keepUntilFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime KeepUntilDate {
            get {
                return this.keepUntilDateField;
            }
            set {
                this.keepUntilDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepUntilDateSpecified {
            get {
                return this.keepUntilDateFieldSpecified;
            }
            set {
                this.keepUntilDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ScheduleId {
            get {
                return this.scheduleIdField;
            }
            set {
                this.scheduleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScheduleIdSpecified {
            get {
                return this.scheduleIdFieldSpecified;
            }
            set {
                this.scheduleIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SeriesNum {
            get {
                return this.seriesNumField;
            }
            set {
                this.seriesNumField = value;
            }
        }
        
        /// <remarks/>
        public bool ShouldBeDeleted {
            get {
                return this.shouldBeDeletedField;
            }
            set {
                this.shouldBeDeletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShouldBeDeletedSpecified {
            get {
                return this.shouldBeDeletedFieldSpecified;
            }
            set {
                this.shouldBeDeletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int StopTime {
            get {
                return this.stopTimeField;
            }
            set {
                this.stopTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopTimeSpecified {
            get {
                return this.stopTimeFieldSpecified;
            }
            set {
                this.stopTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TimesWatched {
            get {
                return this.timesWatchedField;
            }
            set {
                this.timesWatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimesWatchedSpecified {
            get {
                return this.timesWatchedFieldSpecified;
            }
            set {
                this.timesWatchedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public partial class WebIntResult {
        
        private int resultField;
        
        private bool resultFieldSpecified;
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebChannelProgramsOfWebProgramDetailedmOh5d_SPI {
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private WebProgramDetailed[] programsField;
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebProgramDetailed[] Programs {
            get {
                return this.programsField;
            }
            set {
                this.programsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.TVAccessService.Inter" +
        "faces")]
    public partial class WebChannelProgramsOfWebProgramBasicmOh5d_SPI {
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private WebProgramBasic[] programsField;
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebProgramBasic[] Programs {
            get {
                return this.programsField;
            }
            set {
                this.programsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public partial class WebBoolResult {
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public enum WebSortField {
        
        /// <remarks/>
        Title,
        
        /// <remarks/>
        DateAdded,
        
        /// <remarks/>
        Year,
        
        /// <remarks/>
        Genre,
        
        /// <remarks/>
        Rating,
        
        /// <remarks/>
        Categories,
        
        /// <remarks/>
        MusicTrackNumber,
        
        /// <remarks/>
        MusicComposer,
        
        /// <remarks/>
        TVEpisodeNumber,
        
        /// <remarks/>
        TVSeasonNumber,
        
        /// <remarks/>
        PictureDateTaken,
        
        /// <remarks/>
        TVDateAired,
        
        /// <remarks/>
        Type,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Channel,
        
        /// <remarks/>
        StartTime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public enum WebSortOrder {
        
        /// <remarks/>
        Asc,
        
        /// <remarks/>
        Desc,
        
        /// <remarks/>
        Custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.Common.Interfaces")]
    public enum WebMediaType {
        
        /// <remarks/>
        Movie,
        
        /// <remarks/>
        MusicTrack,
        
        /// <remarks/>
        Picture,
        
        /// <remarks/>
        TVEpisode,
        
        /// <remarks/>
        File,
        
        /// <remarks/>
        TVShow,
        
        /// <remarks/>
        TVSeason,
        
        /// <remarks/>
        MusicAlbum,
        
        /// <remarks/>
        MusicArtist,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        Drive,
        
        /// <remarks/>
        Playlist,
        
        /// <remarks/>
        TV,
        
        /// <remarks/>
        Recording,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SwitchTVServerToChannelAndGetTimeshiftFilenameCompletedEventHandler(object sender, SwitchTVServerToChannelAndGetTimeshiftFilenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchTVServerToChannelAndGetTimeshiftFilenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwitchTVServerToChannelAndGetTimeshiftFilenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStringResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStringResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendHeartbeatCompletedEventHandler(object sender, SendHeartbeatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendHeartbeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendHeartbeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelCurrentTimeShiftingCompletedEventHandler(object sender, CancelCurrentTimeShiftingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelCurrentTimeShiftingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelCurrentTimeShiftingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramsBasicForChannelCompletedEventHandler(object sender, GetProgramsBasicForChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramsBasicForChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramsBasicForChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramsDetailedForChannelCompletedEventHandler(object sender, GetProgramsDetailedForChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramsDetailedForChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramsDetailedForChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramsBasicForGroupCompletedEventHandler(object sender, GetProgramsBasicForGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramsBasicForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramsBasicForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelProgramsOfWebProgramBasicmOh5d_SPI[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelProgramsOfWebProgramBasicmOh5d_SPI[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramsDetailedForGroupCompletedEventHandler(object sender, GetProgramsDetailedForGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramsDetailedForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramsDetailedForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelProgramsOfWebProgramDetailedmOh5d_SPI[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelProgramsOfWebProgramDetailedmOh5d_SPI[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurrentProgramOnChannelCompletedEventHandler(object sender, GetCurrentProgramOnChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentProgramOnChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentProgramOnChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextProgramOnChannelCompletedEventHandler(object sender, GetNextProgramOnChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextProgramOnChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextProgramOnChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchProgramsCountCompletedEventHandler(object sender, SearchProgramsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchProgramsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchProgramsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebIntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebIntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchProgramsBasicCompletedEventHandler(object sender, SearchProgramsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchProgramsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchProgramsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchProgramsBasicByRangeCompletedEventHandler(object sender, SearchProgramsBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchProgramsBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchProgramsBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchProgramsDetailedCompletedEventHandler(object sender, SearchProgramsDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchProgramsDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchProgramsDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchProgramsDetailedByRangeCompletedEventHandler(object sender, SearchProgramsDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchProgramsDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchProgramsDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNowNextWebProgramBasicForChannelCompletedEventHandler(object sender, GetNowNextWebProgramBasicForChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNowNextWebProgramBasicForChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNowNextWebProgramBasicForChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNowNextWebProgramDetailedForChannelCompletedEventHandler(object sender, GetNowNextWebProgramDetailedForChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNowNextWebProgramDetailedForChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNowNextWebProgramDetailedForChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramBasicByIdCompletedEventHandler(object sender, GetProgramBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramDetailedByIdCompletedEventHandler(object sender, GetProgramDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgramDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgramDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramIsScheduledOnChannelCompletedEventHandler(object sender, GetProgramIsScheduledOnChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramIsScheduledOnChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramIsScheduledOnChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProgramIsScheduledCompletedEventHandler(object sender, GetProgramIsScheduledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramIsScheduledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramIsScheduledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecordingByIdCompletedEventHandler(object sender, GetRecordingByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordingByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordingByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebRecordingBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebRecordingBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecordingFileInfoCompletedEventHandler(object sender, GetRecordingFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordingFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordingFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebRecordingFileInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebRecordingFileInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReadRecordingFileCompletedEventHandler(object sender, ReadRecordingFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadRecordingFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadRecordingFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGroupCountCompletedEventHandler(object sender, GetGroupCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebIntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebIntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGroupsCompletedEventHandler(object sender, GetGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGroupsByRangeCompletedEventHandler(object sender, GetGroupsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGroupByIdCompletedEventHandler(object sender, GetGroupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelCountCompletedEventHandler(object sender, GetChannelCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebIntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebIntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelsBasicCompletedEventHandler(object sender, GetChannelsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelsBasicByRangeCompletedEventHandler(object sender, GetChannelsBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelsBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelsBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelsDetailedCompletedEventHandler(object sender, GetChannelsDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelsDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelsDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelsDetailedByRangeCompletedEventHandler(object sender, GetChannelsDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelsDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelsDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllChannelStatesForGroupCompletedEventHandler(object sender, GetAllChannelStatesForGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllChannelStatesForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllChannelStatesForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelState[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelState[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioGroupCountCompletedEventHandler(object sender, GetRadioGroupCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioGroupCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioGroupCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebIntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebIntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioGroupsCompletedEventHandler(object sender, GetRadioGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioGroupsByRangeCompletedEventHandler(object sender, GetRadioGroupsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioGroupsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioGroupsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioGroupByIdCompletedEventHandler(object sender, GetRadioGroupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioGroupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioGroupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioChannelCountCompletedEventHandler(object sender, GetRadioChannelCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioChannelCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioChannelCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebIntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebIntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioChannelsBasicCompletedEventHandler(object sender, GetRadioChannelsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioChannelsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioChannelsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioChannelsBasicByRangeCompletedEventHandler(object sender, GetRadioChannelsBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioChannelsBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioChannelsBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioChannelsDetailedCompletedEventHandler(object sender, GetRadioChannelsDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioChannelsDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioChannelsDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRadioChannelsDetailedByRangeCompletedEventHandler(object sender, GetRadioChannelsDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadioChannelsDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadioChannelsDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRadioChannelStatesForGroupCompletedEventHandler(object sender, GetAllRadioChannelStatesForGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRadioChannelStatesForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRadioChannelStatesForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelState[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelState[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelBasicByIdCompletedEventHandler(object sender, GetChannelBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelDetailedByIdCompletedEventHandler(object sender, GetChannelDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChannelStateCompletedEventHandler(object sender, GetChannelStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebChannelState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebChannelState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SwitchTVServerToChannelAndGetVirtualCardCompletedEventHandler(object sender, SwitchTVServerToChannelAndGetVirtualCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchTVServerToChannelAndGetVirtualCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwitchTVServerToChannelAndGetVirtualCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebVirtualCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebVirtualCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SwitchTVServerToChannelAndGetStreamingUrlCompletedEventHandler(object sender, SwitchTVServerToChannelAndGetStreamingUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchTVServerToChannelAndGetStreamingUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwitchTVServerToChannelAndGetStreamingUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStringResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStringResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceDescriptionCompletedEventHandler(object sender, GetServiceDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVServiceDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVServiceDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestConnectionToTVServiceCompletedEventHandler(object sender, TestConnectionToTVServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionToTVServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionToTVServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReadSettingFromDatabaseCompletedEventHandler(object sender, ReadSettingFromDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadSettingFromDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadSettingFromDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStringResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStringResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WriteSettingToDatabaseCompletedEventHandler(object sender, WriteSettingToDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteSettingToDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteSettingToDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLocalDiskInformationCompletedEventHandler(object sender, GetLocalDiskInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocalDiskInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocalDiskInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebDiskSpaceInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebDiskSpaceInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVSearchResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVSearchResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExternalMediaInfoCompletedEventHandler(object sender, GetExternalMediaInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalMediaInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalMediaInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebDictionaryOfstring Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebDictionaryOfstring)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchResultsByRangeCompletedEventHandler(object sender, SearchResultsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchResultsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchResultsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVSearchResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVSearchResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCardsCompletedEventHandler(object sender, GetCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetActiveCardsCompletedEventHandler(object sender, GetActiveCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebVirtualCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebVirtualCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetActiveUsersCompletedEventHandler(object sender, GetActiveUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStreamingClientsCompletedEventHandler(object sender, GetStreamingClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStreamingClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStreamingClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebRtspClient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebRtspClient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRecordingDiskInformationCompletedEventHandler(object sender, GetAllRecordingDiskInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRecordingDiskInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRecordingDiskInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebDiskSpaceInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebDiskSpaceInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecordingDiskInformationForCardCompletedEventHandler(object sender, GetRecordingDiskInformationForCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordingDiskInformationForCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordingDiskInformationForCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebDiskSpaceInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebDiskSpaceInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartRecordingManualCompletedEventHandler(object sender, StartRecordingManualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRecordingManualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRecordingManualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddScheduleCompletedEventHandler(object sender, AddScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddScheduleDetailedCompletedEventHandler(object sender, AddScheduleDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScheduleCountCompletedEventHandler(object sender, GetScheduleCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebIntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebIntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSchedulesCompletedEventHandler(object sender, GetSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebScheduleBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebScheduleBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSchedulesByRangeCompletedEventHandler(object sender, GetSchedulesByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebScheduleBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebScheduleBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScheduleByIdCompletedEventHandler(object sender, GetScheduleByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebScheduleBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebScheduleBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelScheduleCompletedEventHandler(object sender, CancelScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebBoolResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebBoolResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScheduledRecordingsForDateCompletedEventHandler(object sender, GetScheduledRecordingsForDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduledRecordingsForDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduledRecordingsForDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebScheduledRecording[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebScheduledRecording[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScheduledRecordingsForTodayCompletedEventHandler(object sender, GetScheduledRecordingsForTodayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduledRecordingsForTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduledRecordingsForTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebScheduledRecording[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebScheduledRecording[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecordingCountCompletedEventHandler(object sender, GetRecordingCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordingCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordingCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebIntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebIntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecordingsCompletedEventHandler(object sender, GetRecordingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebRecordingBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebRecordingBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecordingsByRangeCompletedEventHandler(object sender, GetRecordingsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordingsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordingsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebRecordingBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebRecordingBasic[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591