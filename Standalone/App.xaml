<Application x:Class="Standalone.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Standalone"
    StartupUri="OnlineVideosMainWindow.xaml">
    <Application.Resources>
        <local:ThumbnailConverter x:Key="ThumbnailConverter"/>
        <local:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <local:ZeroVisibilityConverter x:Key="ZeroVisibilityConverter"/>
        <local:LanguageConverter x:Key="LanguageConverter"/> 
        <local:TranslationConverter x:Key="TranslationConverter"/>

        <SolidColorBrush x:Key="BackgroundColor" Color="#FFE3F4FC"/>
        <SolidColorBrush x:Key="TransparentBackgroundColor" Color="#EEE3F4FC"/>

        <!-- make images on buttons look grayed when the button is disabled -->
        <Style TargetType="Button">
            <Style.Resources>
                <Style TargetType="Image">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        
        <Storyboard x:Key="WobbleAnimation">
            <DoubleAnimation Storyboard.TargetName="frameScale" Storyboard.TargetProperty="ScaleX" To="1.4" 
                                                 Duration="0:0:0.15" />
            <DoubleAnimation Storyboard.TargetName="frameScale" Storyboard.TargetProperty="ScaleY" To="1.4" 
                                                 Duration="0:0:0.15" />
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="frameRotate" Storyboard.TargetProperty="Angle" RepeatBehavior="Forever">
                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:1"/>
                <LinearDoubleKeyFrame Value="-5" KeyTime="0:0:1.05"/>
                <LinearDoubleKeyFrame Value="5" KeyTime="0:0:1.15"/>
                <LinearDoubleKeyFrame Value="-5" KeyTime="0:0:1.25"/>
                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:1.3"/>
                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:2.2"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <DataTemplate x:Key="Site">
            <Grid Width="100" Height="100" Margin="2">
                <Border x:Name="frame" BorderBrush="Black" BorderThickness="1" CornerRadius="4">
                    <Grid ToolTip="{Binding Path=Name}">
                        <Image Margin="0 2 2 0" Width="16" HorizontalAlignment="Right" VerticalAlignment="Top" Source="{Binding Path=Language, Converter={StaticResource LanguageConverter}}"/>
                        <Image Margin="5" Name="thumb" Source="{Binding Path=., Converter={StaticResource ThumbnailConverter}}"/>
                    </Grid>
                </Border>
                <TextBlock Text="{Binding Path=Name}" Foreground="Black" FontWeight="Bold" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" Visibility="{Binding ElementName=thumb, Path=Source, Converter={StaticResource NullVisibilityConverter}}"/>
                <TextBlock Text="{Binding Path=Name}" Foreground="Black" FontSize="9" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="{Binding ElementName=thumb, Path=Source, Converter={StaticResource NullVisibilityConverter}, ConverterParameter=inverted}"/>
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="frameScale" ScaleX="1" ScaleY="1" CenterX="50" CenterY="50" />
                        <RotateTransform x:Name="frameRotate" CenterX="50" CenterY="50" Angle="0" />
                    </TransformGroup>
                </Grid.RenderTransform>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">                                        
                    <DataTrigger.Setters>
                        <Setter TargetName="frame" Property="Background" Value="{StaticResource BackgroundColor}"/>
                    </DataTrigger.Setters>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="wobbleAnim" Storyboard="{StaticResource WobbleAnimation}" />
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="wobbleAnim" />
                    </DataTrigger.ExitActions>
                </DataTrigger>                                
            </DataTemplate.Triggers>
        </DataTemplate>
        
        <DataTemplate x:Key="Category">
            <Border x:Name="frame" BorderThickness="1" BorderBrush="Black" Margin="2" Height="60" Width="180">
                <Grid ToolTip="{Binding Path=Name}">
                    <DockPanel>
                        <Image DockPanel.Dock="Left" MaxWidth="60" Name="thumb" Source="{Binding Path=ThumbnailImage, Converter={StaticResource ThumbnailConverter}}"/>
                        <TextBlock Text="{Binding Path=Name}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="Black"/>
                    </DockPanel>
                    <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Right" FontSize="9" Padding="0 0 2 0" Text="{Binding Path=EstimatedVideoCount}" Foreground="Black"/>
                </Grid>
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="frameScale" ScaleX="1" ScaleY="1" CenterX="90" CenterY="30" />
                    </TransformGroup>
                </Border.RenderTransform>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                    <DataTrigger.Setters>
                        <Setter TargetName="frame" Property="Background" Value="{StaticResource BackgroundColor}"/>
                    </DataTrigger.Setters>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="enlargeAnim">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="frameScale" Storyboard.TargetProperty="ScaleX" To="1.26" 
                                                 Duration="0:0:0.15" />
                                <DoubleAnimation Storyboard.TargetName="frameScale" Storyboard.TargetProperty="ScaleY" To="1.26" 
                                                 Duration="0:0:0.15" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="enlargeAnim" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>            
        </DataTemplate>
        
        <DataTemplate x:Key="Video">
            <Border x:Name="frame" BorderBrush="Black" BorderThickness="1" Width="140" Height="120" Margin="2">
                <Grid ToolTip="{Binding Path=Name}">
					<TextBlock Text="{Binding Path=Name}" Foreground="Black" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" Visibility="{Binding ElementName=thumb, Path=Source, Converter={StaticResource NullVisibilityConverter}}"/>
                    <Image VerticalAlignment="Top" HorizontalAlignment="Center" MaxHeight="95" Name="thumb" Source="{Binding Path=ThumbnailImage, Converter={StaticResource ThumbnailConverter}}"/>
					<TextBlock Height="20" FontSize="10" LineHeight="10" TextWrapping="Wrap" Foreground="Black" LineStackingStrategy="BlockLineHeight" Text="{Binding Path=Name}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="{Binding ElementName=thumb, Path=Source, Converter={StaticResource NullVisibilityConverter}, ConverterParameter=inverted}"/>
                </Grid>
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="frameScale" ScaleX="1" ScaleY="1" CenterX="70" CenterY="60" />
                    </TransformGroup>
                </Border.RenderTransform>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                    <DataTrigger.Setters>
                        <Setter TargetName="frame" Property="Background" Value="{StaticResource BackgroundColor}"/>
                    </DataTrigger.Setters>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="enlargeAnim">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="frameScale" Storyboard.TargetProperty="ScaleX" To="1.35" 
                                                 Duration="0:0:0.15" />
                                <DoubleAnimation Storyboard.TargetName="frameScale" Storyboard.TargetProperty="ScaleY" To="1.35" 
                                                 Duration="0:0:0.15" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="enlargeAnim" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        
        <Style x:Key="PlayButton" TargetType="{x:Type Button}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate DataType="Button">
                        <Viewbox Stretch="Uniform" Margin="2">
                            <Canvas Width="35" Height="22">
                                <Polygon Fill="#AAAAAAAA" Stroke="Black" StrokeLineJoin="Round">
                                    <Polygon.Points>
                                        <Point X="0" Y="1"/>
                                        <Point X="15" Y="11"/>
                                        <Point X="0" Y="21"/>
                                    </Polygon.Points>
                                </Polygon>
                                <Rectangle Canvas.Left="23" Canvas.Top="1" Width="4" Height="20" Fill="#AAAAAAAA" Stroke="Black" StrokeLineJoin="Round"/>
                                <Rectangle Canvas.Left="30" Canvas.Top="1" Width="4" Height="20" Fill="#AAAAAAAA" Stroke="Black" StrokeLineJoin="Round"/>
                            </Canvas>
                        </Viewbox>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="StopButton" TargetType="{x:Type Button}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate DataType="Button">
                        <Viewbox Stretch="Uniform" Margin="2">
                            <Canvas Width="22" Height="22">
                                <Rectangle Canvas.Left="1" Canvas.Top="1" Fill="#AAAAAAAA" Stroke="Black" StrokeLineJoin="Round" Width="20" Height="20"/>
                            </Canvas>
                        </Viewbox>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type local:Notification}" x:Key="FadeInOut">
            <Style.Triggers>
                <Trigger Property="IsActive" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="-80" To="40" Duration="0:0:0.7"/>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.7"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="{x:Null}">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="40" To="-80" Duration="0:0:0.7"/>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.7"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="{x:Null}">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Brushes used in Styling of ScrollViewer -->
        <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="#77F0F0F0" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#44006AFF" />
        <SolidColorBrush x:Key="NormalBrush" Color="#44006AFF" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#44006AFF" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#44006AFF" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#44006AFF" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <LinearGradientBrush x:Key="PressedBrush"
            StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2"
                              Background="{StaticResource NormalBrush}"
                              BorderBrush="{StaticResource NormalBorderBrush}"
                              BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                Fill="{StaticResource GlyphBrush}"
                                Data="{Binding Path=Content,
                                RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2"
                      Background="{StaticResource ScrollBarBackgroundBrush}" />
                <RepeatButton Grid.Row="0" Height="18"
                              Style="{StaticResource ScrollBarLineButton}" 
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Margin="1,0,1,0"
                          Style="{StaticResource ScrollBarThumb}"
                          Background="{StaticResource HorizontalNormalBrush}"
                          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                              Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                  Style="{StaticResource ScrollBarLineButton}"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="{StaticResource ScrollBarBackgroundBrush}" />
                <RepeatButton Grid.Column="0" Width="18"
                              Style="{StaticResource ScrollBarLineButton}"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Margin="0,1,0,1"
                               Style="{StaticResource ScrollBarThumb}"
                               Background="{StaticResource NormalBrush}"
                               BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Width="18"
                              Style="{StaticResource ScrollBarLineButton}"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        
        <!-- Style for overall ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
